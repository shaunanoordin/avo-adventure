/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./src/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./src/avo/comic-strip.js":
/*!********************************!*\
  !*** ./src/avo/comic-strip.js ***!
  \********************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ComicStrip = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*  \nvO Comic Strip\nnnhaun A. Noordin || shaunanoordin.com || 20161011)\nnn\nvar _constants = __webpack_require__(/*! ./constants.js */ \"./src/avo/constants.js\");\n\nvar AVO = _interopRequireWildcard(_constants);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//Naming note: all caps.\n\n/*  4-Koma Comic Strip Class\n */\n//==============================================================================\nvar ComicStrip = exports.ComicStrip = function () {\n  function ComicStrip() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    var panels = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var onFinish = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : null;\n\n    _classCallCheck(this, ComicStrip);\n\n    this.name = name;\n    this.panels = panels;\n    this.onFinish = onFinish;\n\n    this.waitTime = AVO.DEFAULT_COMIC_STRIP_WAIT_TIME_BEFORE_INPUT;\n    this.transitionTime = AVO.DEFAULT_COMIC_STRIP_TRANSITION_TIME;\n    this.background = \"#333\";\n\n    this.start();\n  }\n\n  _createClass(ComicStrip, [{\n    key: \"start\",\n    value: function start() {\n      this.currentPanel = 0;\n      this.state = AVO.COMIC_STRIP_STATE_TRANSITIONING;\n      this.counter = 0;\n    }\n  }, {\n    key: \"getCurrentPanel\",\n    value: function getCurrentPanel() {\n      if (this.currentPanel < 0 || this.currentPanel >= this.panels.length) {\n        return null;\n      } else {\n        return this.panels[this.currentPanel];\n      }\n    }\n  }, {\n    key: \"getPreviousPanel\",\n    value: function getPreviousPanel() {\n      if (this.currentPanel < 1 || this.currentPanel >= this.panels.length + 1) {\n        return null;\n      } else {\n        return this.panels[this.currentPanel - 1];\n      }\n    }\n  }]);\n\n  return ComicStrip;\n}();\n//==============================================================================\n\n//# sourceURL=webpack:///./src/avo/comic-strip.js?");

/***/ }),

/***/ "./src/avo/constants.js":
/*!******************************!*\
  !*** ./src/avo/constants.js ***!
  \******************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n/*\nConstant Values\n===============\n\n(Shaun A. Noordin || shaunanoordin.com || 20160901)\n********************************************************************************\n */\nvar FRAMES_PER_SECOND = exports.FRAMES_PER_SECOND = 50;\nvar INPUT_IDLE = exports.INPUT_IDLE = 0;\nvar INPUT_ACTIVE = exports.INPUT_ACTIVE = 1;\nvar INPUT_ENDED = exports.INPUT_ENDED = 2;\nvar INPUT_DISTANCE_SENSITIVITY = exports.INPUT_DISTANCE_SENSITIVITY = 16;\nvar MAX_KEYS = exports.MAX_KEYS = 128;\n\nvar STATE_START = exports.STATE_START = 0; //AvO App states\nvar STATE_ACTION = exports.STATE_ACTION = 1;\nvar STATE_COMIC = exports.STATE_COMIC = 2;\nvar STATE_END = exports.STATE_END = 3;\n\nvar ACTOR_IDLE = exports.ACTOR_IDLE = 0; //Actor states\nvar ACTOR_MOVING = exports.ACTOR_MOVING = 1;\nvar ACTOR_ACTING = exports.ACTOR_ACTING = 2;\nvar ACTOR_REACTING = exports.ACTOR_REACTING = 3;\n\nvar MIN_Z_INDEX = exports.MIN_Z_INDEX = 0;\nvar DEFAULT_Z_INDEX = exports.DEFAULT_Z_INDEX = 1;\nvar MAX_Z_INDEX = exports.MAX_Z_INDEX = 2;\n\n//export const REF = {  //Standard References\n//  PLAYER: \"player\",  //DEPRECATED. Use AvO.playerActor instead.\n//};\n\nvar ACTION = exports.ACTION = { //Standard Actions\n  IDLE: \"idle\",\n  MOVING: \"moving\",\n  PRIMARY: \"primary\"\n};\n\nvar ATTR = exports.ATTR = { //Standard Attributes\n  SPEED: \"speed\"\n};\n\nvar ANIMATION_RULE_BASIC = exports.ANIMATION_RULE_BASIC = \"basic\";\nvar ANIMATION_RULE_DIRECTIONAL = exports.ANIMATION_RULE_DIRECTIONAL = \"directional\";\n\nvar SHAPE_NONE = exports.SHAPE_NONE = 0; //No shape = no collision\nvar SHAPE_SQUARE = exports.SHAPE_SQUARE = 1;\nvar SHAPE_CIRCLE = exports.SHAPE_CIRCLE = 2;\nvar SHAPE_POLYGON = exports.SHAPE_POLYGON = 3;\n\nvar ROTATION_EAST = exports.ROTATION_EAST = 0;\nvar ROTATION_SOUTH = exports.ROTATION_SOUTH = Math.PI * 0.5;\nvar ROTATION_WEST = exports.ROTATION_WEST = Math.PI;\nvar ROTATION_NORTH = exports.ROTATION_NORTH = Math.PI * -0.5;\n\nvar ROTATION_SOUTHEAST = exports.ROTATION_SOUTHEAST = Math.PI * 0.25;\nvar ROTATION_SOUTHWEST = exports.ROTATION_SOUTHWEST = Math.PI * 0.75;\nvar ROTATION_NORTHWEST = exports.ROTATION_NORTHWEST = Math.PI * -0.75;\nvar ROTATION_NORTHEAST = exports.ROTATION_NORTHEAST = Math.PI * -0.25;\n\nvar DIRECTION_EAST = exports.DIRECTION_EAST = 0;\nvar DIRECTION_SOUTH = exports.DIRECTION_SOUTH = 1;\nvar DIRECTION_WEST = exports.DIRECTION_WEST = 2;\nvar DIRECTION_NORTH = exports.DIRECTION_NORTH = 3;\n\nvar DURATION_INFINITE = exports.DURATION_INFINITE = 0;\n\nvar COMIC_STRIP_STATE_TRANSITIONING = exports.COMIC_STRIP_STATE_TRANSITIONING = 0;\nvar COMIC_STRIP_STATE_WAIT_BEFORE_INPUT = exports.COMIC_STRIP_STATE_WAIT_BEFORE_INPUT = 1;\nvar COMIC_STRIP_STATE_IDLE = exports.COMIC_STRIP_STATE_IDLE = 2;\n\nvar DEFAULT_FONT = exports.DEFAULT_FONT = \"32px monospace\";\nvar DEFAULT_COMIC_STRIP_WAIT_TIME_BEFORE_INPUT = exports.DEFAULT_COMIC_STRIP_WAIT_TIME_BEFORE_INPUT = 10;\nvar DEFAULT_COMIC_STRIP_TRANSITION_TIME = exports.DEFAULT_COMIC_STRIP_TRANSITION_TIME = 20;\n\nvar STACKING_RULE_ADD = exports.STACKING_RULE_ADD = 0;\nvar STACKING_RULE_REPLACE = exports.STACKING_RULE_REPLACE = 1;\n\nvar SHADOW_COLOUR = exports.SHADOW_COLOUR = \"rgba(0,0,0,0.5)\";\n\nvar KEY_CODES = exports.KEY_CODES = {\n  LEFT: 37,\n  UP: 38,\n  RIGHT: 39,\n  DOWN: 40,\n  ENTER: 13,\n  SPACE: 32,\n  ESCAPE: 27,\n  TAB: 9,\n  SHIFT: 16,\n\n  A: 65,\n  B: 66,\n  C: 67,\n  D: 68,\n  E: 69,\n  F: 70,\n  G: 71,\n  H: 72,\n  I: 73,\n  J: 74,\n  K: 75,\n  L: 76,\n  M: 77,\n  N: 78,\n  O: 79,\n  P: 80,\n  Q: 81,\n  R: 82,\n  S: 83,\n  T: 84,\n  U: 85,\n  V: 86,\n  W: 87,\n  X: 88,\n  Y: 89,\n  Z: 90,\n\n  NUM0: 48,\n  NUM1: 49,\n  NUM2: 50,\n  NUM3: 51,\n  NUM4: 52,\n  NUM5: 53,\n  NUM6: 54,\n  NUM7: 55,\n  NUM8: 56,\n  NUM9: 57\n};\n\nvar KEY_VALUES = exports.KEY_VALUES = {\n  \"ArrowLeft\": KEY_CODES.LEFT,\n  \"Left\": KEY_CODES.LEFT,\n  \"ArrowUp\": KEY_CODES.UP,\n  \"Up\": KEY_CODES.UP,\n  \"ArrowDown\": KEY_CODES.DOWN,\n  \"Down\": KEY_CODES.DOWN,\n  \"ArrowRight\": KEY_CODES.RIGHT,\n  \"Right\": KEY_CODES.RIGHT,\n  \"Enter\": KEY_CODES.ENTER,\n  \"Space\": KEY_CODES.SPACE,\n  \" \": KEY_CODES.SPACE,\n  \"Esc\": KEY_CODES.ESCAPE,\n  \"Escape\": KEY_CODES.ESCAPE,\n  \"Tab\": KEY_CODES.TAB,\n  \"Shift\": KEY_CODES.SHIFT,\n  \"ShiftLeft\": KEY_CODES.SHIFT,\n  \"ShiftRight\": KEY_CODES.SHIFT,\n\n  \"A\": KEY_CODES.A,\n  \"KeyA\": KEY_CODES.A,\n  \"B\": KEY_CODES.B,\n  \"KeyB\": KEY_CODES.B,\n  \"C\": KEY_CODES.C,\n  \"KeyC\": KEY_CODES.C,\n  \"D\": KEY_CODES.D,\n  \"KeyD\": KEY_CODES.D,\n  \"E\": KEY_CODES.E,\n  \"KeyE\": KEY_CODES.E,\n  \"F\": KEY_CODES.F,\n  \"KeyF\": KEY_CODES.F,\n  \"G\": KEY_CODES.G,\n  \"KeyG\": KEY_CODES.G,\n  \"H\": KEY_CODES.H,\n  \"KeyH\": KEY_CODES.H,\n  \"I\": KEY_CODES.I,\n  \"KeyI\": KEY_CODES.I,\n  \"J\": KEY_CODES.J,\n  \"KeyJ\": KEY_CODES.J,\n  \"K\": KEY_CODES.K,\n  \"KeyK\": KEY_CODES.K,\n  \"L\": KEY_CODES.L,\n  \"KeyL\": KEY_CODES.L,\n  \"M\": KEY_CODES.M,\n  \"KeyM\": KEY_CODES.M,\n  \"N\": KEY_CODES.N,\n  \"KeyN\": KEY_CODES.N,\n  \"O\": KEY_CODES.O,\n  \"KeyO\": KEY_CODES.O,\n  \"P\": KEY_CODES.P,\n  \"KeyP\": KEY_CODES.P,\n  \"Q\": KEY_CODES.Q,\n  \"KeyQ\": KEY_CODES.Q,\n  \"R\": KEY_CODES.R,\n  \"KeyR\": KEY_CODES.R,\n  \"S\": KEY_CODES.S,\n  \"KeyS\": KEY_CODES.S,\n  \"T\": KEY_CODES.T,\n  \"KeyT\": KEY_CODES.T,\n  \"U\": KEY_CODES.U,\n  \"KeyU\": KEY_CODES.U,\n  \"V\": KEY_CODES.V,\n  \"KeyV\": KEY_CODES.V,\n  \"W\": KEY_CODES.W,\n  \"KeyW\": KEY_CODES.W,\n  \"X\": KEY_CODES.X,\n  \"KeyX\": KEY_CODES.X,\n  \"Y\": KEY_CODES.Y,\n  \"KeyY\": KEY_CODES.Y,\n  \"Z\": KEY_CODES.Z,\n  \"KeyZ\": KEY_CODES.Z,\n\n  \"0\": KEY_CODES.NUM0,\n  \"Digit0\": KEY_CODES.NUM0,\n  \"1\": KEY_CODES.NUM1,\n  \"Digit1\": KEY_CODES.NUM1,\n  \"2\": KEY_CODES.NUM2,\n  \"Digit2\": KEY_CODES.NUM2,\n  \"3\": KEY_CODES.NUM3,\n  \"Digit3\": KEY_CODES.NUM3,\n  \"4\": KEY_CODES.NUM4,\n  \"Digit4\": KEY_CODES.NUM4,\n  \"5\": KEY_CODES.NUM5,\n  \"Digit5\": KEY_CODES.NUM5,\n  \"6\": KEY_CODES.NUM6,\n  \"Digit6\": KEY_CODES.NUM6,\n  \"7\": KEY_CODES.NUM7,\n  \"Digit7\": KEY_CODES.NUM7,\n  \"8\": KEY_CODES.NUM8,\n  \"Digit8\": KEY_CODES.NUM8,\n  \"9\": KEY_CODES.NUM9,\n  \"Digit9\": KEY_CODES.NUM9\n};\n\n//# sourceURL=webpack:///./src/avo/constants.js?");

/***/ }),

/***/ "./src/avo/effect.js":
/*!***************************!*\
  !*** ./src/avo/effect.js ***!
  \***************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Effect = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*  \nffect\nnnhaun A. Noordin || shaunanoordin.com || 20161011)\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     ********************************************************************************\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                      */\n\nvar _constants = __webpack_require__(/*! ./constants.js */ \"./src/avo/constants.js\");\n\nvar AVO = _interopRequireWildcard(_constants);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n//Naming note: all caps.\n\n/*  Effect Class\n    A general effect that's applied to an Actor. \n */\n//==============================================================================\nvar Effect = exports.Effect = function () {\n  function Effect() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    var data = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var duration = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 1;\n    var stackingRule = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : AVO.STACKING_RULE_ADD;\n\n    _classCallCheck(this, Effect);\n\n    this.name = name;\n    this.data = data;\n    this.duration = duration;\n    this.stackingRule = stackingRule;\n    this.startDuration = duration;\n  }\n\n  _createClass(Effect, [{\n    key: \"hasInfiniteDuration\",\n    value: function hasInfiniteDuration() {\n      return this.startDuration === AVO.DURATION_INFINITE;\n    }\n  }, {\n    key: \"copy\",\n    value: function copy() {\n      return new Effect(this.name, this.data, this.duration, this.stackingRule);\n    }\n  }]);\n\n  return Effect;\n}();\n//==============================================================================\n\n//# sourceURL=webpack:///./src/avo/effect.js?");

/***/ }),

/***/ "./src/avo/entities.js":
/*!*****************************!*\
  !*** ./src/avo/entities.js ***!
  \*****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Zone = exports.Actor = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*  \nvO Entities (In-Game Objects)\nnnhaun A. Noordin || shaunanoordin.com || 20161001)\nnn\n//Naming note: all caps.\n\n\nvar _constants = __webpack_require__(/*! ./constants.js */ \"./src/avo/constants.js\");\n\nvar AVO = _interopRequireWildcard(_constants);\n\nvar _utility = __webpack_require__(/*! ./utility.js */ \"./src/avo/utility.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*  Entity Class\n    A general object within the game. This is an abstract - see the subclasses\n    for practical implementations.\n */\n//==============================================================================\nvar Entity = function () {\n  function Entity() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var size = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 32;\n    var shape = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : AVO.SHAPE_NONE;\n\n    _classCallCheck(this, Entity);\n\n    this.name = name;\n    this.x = x;\n    this.y = y;\n    this.z = AVO.DEFAULT_Z_INDEX;\n    this.size = size;\n    this.shape = shape;\n    this.shapePolygonPath = null; //Only applicable if shape === AVO.SHAPE_POLYGON\n    this.solid = shape !== AVO.SHAPE_NONE;\n    this.movable = true;\n    this.rotation = AVO.ROTATION_SOUTH; //Rotation in radians; clockwise positive.\n\n    this.spritesheet = null;\n    this.animationStep = 0;\n    this.animationSet = null;\n    this.animationName = \"\";\n    this.shadowSize = 0; //Size of shadow relative to actual size; 0 means the sprite has no shadow.\n\n    //TODO\n    //The \"Animation Set\" needs to be abstracted into a proper class.\n  }\n\n  _createClass(Entity, [{\n    key: \"playAnimation\",\n    value: function playAnimation() {\n      var animationName = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n      var restart = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n      if (!this.animationSet || !this.animationSet.actions[animationName]) return;\n\n      if (restart || this.animationName !== animationName) {\n        //Set this as the new animation\n        this.animationStep = 0;\n        this.animationName = animationName;\n      }\n    }\n  }, {\n    key: \"nextAnimationFrame\",\n    value: function nextAnimationFrame() {\n      if (!this.animationSet || !this.animationSet.actions[this.animationName]) return;\n\n      var animationAction = this.animationSet.actions[this.animationName];\n      this.animationStep++;\n      if (animationAction.steps.length === 0) {\n        this.animationStep = 0;\n      } else if (animationAction.loop) {\n        while (this.animationStep >= animationAction.steps.length) {\n          this.animationStep -= animationAction.steps.length;\n        }\n      } else {\n        this.animationStep = animationAction.steps.length - 1;\n      }\n    }\n  }, {\n    key: \"left\",\n    get: function get() {\n      return this.x - this.size / 2;\n    },\n    set: function set(val) {\n      this.x = val + this.size / 2;\n    }\n  }, {\n    key: \"right\",\n    get: function get() {\n      return this.x + this.size / 2;\n    },\n    set: function set(val) {\n      this.x = val - this.size / 2;\n    }\n  }, {\n    key: \"top\",\n    get: function get() {\n      return this.y - this.size / 2;\n    },\n    set: function set(val) {\n      this.y = val + this.size / 2;\n    }\n  }, {\n    key: \"bottom\",\n    get: function get() {\n      return this.y + this.size / 2;\n    },\n    set: function set(val) {\n      this.y = val - this.size / 2;\n    }\n  }, {\n    key: \"radius\",\n    get: function get() {\n      return this.size / 2;\n    },\n    set: function set(val) {\n      this.size = val * 2;\n    }\n  }, {\n    key: \"rotation\",\n    get: function get() {\n      return this._rotation;\n    },\n    set: function set(val) {\n      this._rotation = val;\n      while (this._rotation > Math.PI) {\n        this._rotation -= Math.PI * 2;\n      }\n      while (this._rotation <= -Math.PI) {\n        this._rotation += Math.PI * 2;\n      }\n    }\n  }, {\n    key: \"direction\",\n    get: function get() {\n      //Get cardinal direction\n      //Favour East and West when rotation is exactly SW, NW, SE or NE.\n      if (this._rotation <= Math.PI * 0.25 && this._rotation >= Math.PI * -0.25) {\n        return AVO.DIRECTION_EAST;\n      } else if (this._rotation > Math.PI * 0.25 && this._rotation < Math.PI * 0.75) {\n        return AVO.DIRECTION_SOUTH;\n      } else if (this._rotation < Math.PI * -0.25 && this._rotation > Math.PI * -0.75) {\n        return AVO.DIRECTION_NORTH;\n      } else {\n        return AVO.DIRECTION_WEST;\n      }\n    },\n    set: function set(val) {\n      switch (val) {\n        case AVO.DIRECTION_EAST:\n          this._rotation = AVO.ROTATION_EAST;\n          break;\n        case AVO.DIRECTION_SOUTH:\n          this._rotation = AVO.ROTATION_SOUTH;\n          break;\n        case AVO.DIRECTION_WEST:\n          this._rotation = AVO.ROTATION_WEST;\n          break;\n        case AVO.DIRECTION_NORTH:\n          this._rotation = AVO.ROTATION_NORTH;\n          break;\n      }\n    }\n  }, {\n    key: \"vertices\",\n    get: function get() {\n      var _this = this;\n\n      var v = [];\n      if (this.shape === AVO.SHAPE_SQUARE) {\n        v.push({ x: this.left, y: this.top });\n        v.push({ x: this.right, y: this.top });\n        v.push({ x: this.right, y: this.bottom });\n        v.push({ x: this.left, y: this.bottom });\n      } else if (this.shape === AVO.SHAPE_CIRCLE) {\n        //Approximation\n        CIRCLE_TO_POLYGON_APPROXIMATOR.map(function (approximator) {\n          v.push({ x: _this.x + _this.radius * approximator.cosAngle, y: _this.y + _this.radius * approximator.sinAngle });\n        });\n      } else if (this.shape === AVO.SHAPE_POLYGON) {\n        if (!this.shapePolygonPath) return [];\n        for (var i = 0; i < this.shapePolygonPath.length; i += 2) {\n          v.push({ x: this.x + this.shapePolygonPath[i], y: this.y + this.shapePolygonPath[i + 1] });\n        }\n      }\n      return v;\n    }\n  }]);\n\n  return Entity;\n}();\n\nvar CIRCLE_TO_POLYGON_APPROXIMATOR = [AVO.ROTATION_EAST, AVO.ROTATION_SOUTHEAST, AVO.ROTATION_SOUTH, AVO.ROTATION_SOUTHWEST, AVO.ROTATION_WEST, AVO.ROTATION_NORTHWEST, AVO.ROTATION_NORTH, AVO.ROTATION_NORTHEAST].map(function (angle) {\n  return { cosAngle: Math.cos(angle), sinAngle: Math.sin(angle) };\n});\n//==============================================================================\n\n/*  Actor Class\n    An active character in the game.\n */\n//==============================================================================\n\nvar Actor = exports.Actor = function (_Entity) {\n  _inherits(Actor, _Entity);\n\n  function Actor() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var size = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 32;\n    var shape = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : AVO.SHAPE_NONE;\n\n    _classCallCheck(this, Actor);\n\n    var _this2 = _possibleConstructorReturn(this, (Actor.__proto__ || Object.getPrototypeOf(Actor)).call(this, name, x, y, size, shape));\n\n    _this2.shadowSize = shape !== AVO.SHAPE_NONE ? 1 : 0;\n\n    _this2.state = AVO.ACTOR_IDLE;\n    _this2.intent = null;\n    _this2.action = null;\n\n    _this2.attributes = {};\n    _this2.effects = [];\n    return _this2;\n  }\n\n  return Actor;\n}(Entity);\n//==============================================================================\n\n/*  Zone Class\n    An area that applies Effects to Actors that touch it. For example, a bomb\n    explosion, or a dragon's breath, or the \"swing\" of a sword.\n */\n//==============================================================================\n\n\nvar Zone = exports.Zone = function (_Entity2) {\n  _inherits(Zone, _Entity2);\n\n  function Zone() {\n    var name = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : \"\";\n    var x = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n    var y = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 0;\n    var size = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 32;\n    var shape = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : AVO.SHAPE_CIRCLE;\n    var duration = arguments.length > 5 && arguments[5] !== undefined ? arguments[5] : 1;\n    var effects = arguments.length > 6 && arguments[6] !== undefined ? arguments[6] : [];\n\n    _classCallCheck(this, Zone);\n\n    var _this3 = _possibleConstructorReturn(this, (Zone.__proto__ || Object.getPrototypeOf(Zone)).call(this, name, x, y, size, shape));\n\n    _this3.duration = duration;\n    _this3.startDuration = duration;\n    _this3.effects = effects;\n    return _this3;\n  }\n\n  _createClass(Zone, [{\n    key: \"hasInfiniteDuration\",\n    value: function hasInfiniteDuration() {\n      return this.startDuration === AVO.DURATION_INFINITE;\n    }\n  }]);\n\n  return Zone;\n}(Entity);\n//==============================================================================\n\n//# sourceURL=webpack:///./src/avo/entities.js?");

/***/ }),

/***/ "./src/avo/index.js":
/*!**************************!*\
  !*** ./src/avo/index.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.AvO = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*  \nvO Adventure Game Engine\nnnhaun A. Noordin || shaunanoordin.com || 20170322)\nnn\n//Naming note: all caps.\n\n\nvar _constants = __webpack_require__(/*! ./constants.js */ \"./src/avo/constants.js\");\n\nvar AVO = _interopRequireWildcard(_constants);\n\nvar _story = __webpack_require__(/*! ./story.js */ \"./src/avo/story.js\");\n\nvar _physics = __webpack_require__(/*! ./physics.js */ \"./src/avo/physics.js\");\n\nvar _utility = __webpack_require__(/*! ./utility.js */ \"./src/avo/utility.js\");\n\nvar _standardActions = __webpack_require__(/*! ./standard-actions.js */ \"./src/avo/standard-actions.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*  Primary AvO Game Engine\n */\n//==============================================================================\nvar AvO = exports.AvO = function () {\n  //Naming note: small 'v' between capital 'A' and 'O'.\n  function AvO(story) {\n    _classCallCheck(this, AvO);\n\n    //Initialise properties\n    //--------------------------------\n    this.config = {\n      framesPerSecond: AVO.FRAMES_PER_SECOND,\n      debugMode: false,\n      topDownView: true, //Top-down view sorts Actors on paint().\n      skipStandardRun: false, //Skips the standard run() code, including physics.\n      skipStandardPaint: false, //Skips the standard paint() code.\n      autoFitCanvas: true,\n      backgroundColour: \"#333\"\n    };\n    this.runCycle = null;\n    this.html = {\n      app: document.getElementById(\"app\"),\n      canvas: document.getElementById(\"canvas\")\n    };\n    this.context2d = this.html.canvas.getContext(\"2d\");\n    this.boundingBox = null; //To be defined by this.updateSize().\n    //this.sizeRatioX = 1;\n    //this.sizeRatioY = 1;\n    this.canvasSizeRatio = 1;\n    this.canvasWidth = this.html.canvas.width; //The intended width/height of the canvas.\n    this.canvasHeight = this.html.canvas.height;\n    this.state = null;\n    this.animationSets = {};\n    //--------------------------------\n\n    //Account for graphical settings\n    //--------------------------------\n    this.context2d.mozImageSmoothingEnabled = false;\n    this.context2d.msImageSmoothingEnabled = false;\n    this.context2d.imageSmoothingEnabled = false;\n    //--------------------------------\n\n    //Initialise Game Objects\n    //--------------------------------\n    this.story = story ? story : new _story.Story();\n    this.story.avo = this;\n    this.assets = {\n      images: {}\n    };\n    this.assetsLoaded = 0;\n    this.assetsTotal = 0;\n    this.actors = [];\n    this.playerActor = null;\n    this.zones = [];\n    this.refs = {};\n    this.store = {};\n    this.room = null; //Current room.\n    //this.ui = {};\n    this.comicStrip = null;\n    this.actions = {};\n\n    this.camera = {\n      x: 0,\n      y: 0,\n      targetActor: null //If not null, automatically focus on the target actor.\n    };\n    //--------------------------------\n\n    //Prepare Input\n    //--------------------------------\n    this.keys = new Array(AVO.MAX_KEYS);\n    for (var i = 0; i < this.keys.length; i++) {\n      this.keys[i] = {\n        state: AVO.INPUT_IDLE,\n        duration: 0\n      };\n    }\n    this.pointer = {\n      start: { x: 0, y: 0 },\n      now: { x: 0, y: 0 },\n      state: AVO.INPUT_IDLE,\n      duration: 0\n    };\n    //--------------------------------\n\n    //Bind Events\n    //--------------------------------\n    if (\"onmousedown\" in this.html.canvas && \"onmousemove\" in this.html.canvas && \"onmouseup\" in this.html.canvas) {\n      this.html.canvas.onmousedown = this.onPointerStart.bind(this);\n      this.html.canvas.onmousemove = this.onPointerMove.bind(this);\n      this.html.canvas.onmouseup = this.onPointerEnd.bind(this);\n    }\n    if (\"ontouchstart\" in this.html.canvas && \"ontouchmove\" in this.html.canvas && \"ontouchend\" in this.html.canvas && \"ontouchcancel\" in this.html.canvas) {\n      this.html.canvas.ontouchstart = this.onPointerStart.bind(this);\n      this.html.canvas.ontouchmove = this.onPointerMove.bind(this);\n      this.html.canvas.ontouchend = this.onPointerEnd.bind(this);\n      this.html.canvas.ontouchcancel = this.onPointerEnd.bind(this);\n    }\n    if (\"onkeydown\" in window && \"onkeyup\" in window) {\n      window.onkeydown = this.onKeyDown.bind(this);\n      window.onkeyup = this.onKeyUp.bind(this);\n    }\n    if (\"onresize\" in window) {\n      window.onresize = this.updateSize.bind(this);\n    }\n    this.updateSize();\n    //--------------------------------\n\n    //Start!\n    //--------------------------------\n    this.changeState(AVO.STATE_START, this.story.init);\n    this.runCycle = setInterval(this.run.bind(this), 1000 / this.config.framesPerSecond);\n    //--------------------------------\n  }\n\n  //----------------------------------------------------------------\n\n  _createClass(AvO, [{\n    key: \"changeState\",\n    value: function changeState(state) {\n      var callbackScript = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : null;\n\n      this.state = state;\n      if (callbackScript && typeof callbackScript === \"function\") {\n        callbackScript();\n      }\n    }\n  }, {\n    key: \"run\",\n    value: function run() {\n      //Run Story script\n      this.story.preRun(this);\n\n      if (!this.config.skipStandardRun) {\n        switch (this.state) {\n          case AVO.STATE_START:\n            this.run_start();\n            break;\n          case AVO.STATE_END:\n            this.run_end();\n            break;\n          case AVO.STATE_ACTION:\n            this.run_action();\n            break;\n          case AVO.STATE_COMIC:\n            this.run_comic();\n            break;\n        }\n\n        if (this.camera.targetActor) {\n          this.camera.x = Math.floor(this.canvasWidth / 2 - this.camera.targetActor.x);\n          this.camera.y = Math.floor(this.canvasHeight / 2 - this.camera.targetActor.y);\n        }\n      }\n\n      //Run Story script\n      this.story.postRun();\n\n      this.paint();\n    }\n  }, {\n    key: \"run_start\",\n    value: function run_start() {\n      this.assetsLoaded = 0;\n      this.assetsTotal = 0;\n      for (var category in this.assets) {\n        for (var asset in this.assets[category]) {\n          this.assetsTotal++;\n          if (this.assets[category][asset].loaded) this.assetsLoaded++;\n        }\n      }\n      if (this.assetsLoaded < this.assetsTotal) return;\n\n      //Run Story script\n      this.story.run_start();\n    }\n  }, {\n    key: \"run_end\",\n    value: function run_end() {\n      //Run Story script\n      this.story.run_end();\n    }\n  }, {\n    key: \"run_action\",\n    value: function run_action() {\n      //Run Story script\n      this.story.run_action();\n\n      //Actors determine intent\n      //--------------------------------\n      if (this.playerActor) {\n        var player = this.playerActor;\n        player.intent = { name: AVO.ACTION.IDLE };\n\n        //Mouse/touch input\n        if (this.pointer.state === AVO.INPUT_ACTIVE) {\n          var distX = this.pointer.now.x - this.pointer.start.x;\n          var distY = this.pointer.now.y - this.pointer.start.y;\n          var dist = Math.sqrt(distX * distX + distY * distY);\n\n          if (dist > AVO.INPUT_DISTANCE_SENSITIVITY * this.canvasSizeRatio) {\n            var angle = Math.atan2(distY, distX);\n            player.intent = {\n              name: AVO.ACTION.MOVING,\n              angle: angle\n            };\n\n            //UX improvement: reset the base point of the pointer so the player can\n            //switch directions much more easily.\n            if (dist > AVO.INPUT_DISTANCE_SENSITIVITY * this.canvasSizeRatio * 2) {\n              this.pointer.start.x = this.pointer.now.x - Math.cos(angle) * AVO.INPUT_DISTANCE_SENSITIVITY * this.canvasSizeRatio * 2;\n              this.pointer.start.y = this.pointer.now.y - Math.sin(angle) * AVO.INPUT_DISTANCE_SENSITIVITY * this.canvasSizeRatio * 2;\n            }\n          }\n        } else if (this.pointer.state === AVO.INPUT_ENDED) {\n          var _distX = this.pointer.now.x - this.pointer.start.x;\n          var _distY = this.pointer.now.y - this.pointer.start.y;\n          var _dist = Math.sqrt(_distX * _distX + _distY * _distY);\n\n          if (_dist <= AVO.INPUT_DISTANCE_SENSITIVITY * this.canvasSizeRatio) {\n            player.intent = {\n              name: AVO.ACTION.PRIMARY\n            };\n          }\n        }\n\n        //Keyboard input\n        var xDir = 0,\n            yDir = 0;\n        if (this.keys[AVO.KEY_CODES.UP].state === AVO.INPUT_ACTIVE) yDir--;\n        if (this.keys[AVO.KEY_CODES.DOWN].state === AVO.INPUT_ACTIVE) yDir++;\n        if (this.keys[AVO.KEY_CODES.LEFT].state === AVO.INPUT_ACTIVE) xDir--;\n        if (this.keys[AVO.KEY_CODES.RIGHT].state === AVO.INPUT_ACTIVE) xDir++;\n\n        if (xDir > 0 && yDir === 0) {\n          player.intent = {\n            name: AVO.ACTION.MOVING,\n            angle: AVO.ROTATION_EAST\n          };\n        } else if (xDir > 0 && yDir > 0) {\n          player.intent = {\n            name: AVO.ACTION.MOVING,\n            angle: AVO.ROTATION_SOUTHEAST\n          };\n        } else if (xDir === 0 && yDir > 0) {\n          player.intent = {\n            name: AVO.ACTION.MOVING,\n            angle: AVO.ROTATION_SOUTH\n          };\n        } else if (xDir < 0 && yDir > 0) {\n          player.intent = {\n            name: AVO.ACTION.MOVING,\n            angle: AVO.ROTATION_SOUTHWEST\n          };\n        } else if (xDir < 0 && yDir === 0) {\n          player.intent = {\n            name: AVO.ACTION.MOVING,\n            angle: AVO.ROTATION_WEST\n          };\n        } else if (xDir < 0 && yDir < 0) {\n          player.intent = {\n            name: AVO.ACTION.MOVING,\n            angle: AVO.ROTATION_NORTHWEST\n          };\n        } else if (xDir === 0 && yDir < 0) {\n          player.intent = {\n            name: AVO.ACTION.MOVING,\n            angle: AVO.ROTATION_NORTH\n          };\n        } else if (xDir > 0 && yDir < 0) {\n          player.intent = {\n            name: AVO.ACTION.MOVING,\n            angle: AVO.ROTATION_NORTHEAST\n          };\n        }\n\n        if (this.keys[AVO.KEY_CODES.SPACE].duration === 1) {\n          player.intent = {\n            name: AVO.ACTION.PRIMARY\n          };\n        }\n      }\n      //--------------------------------\n\n      //Zones apply Effects\n      //--------------------------------\n      var _iteratorNormalCompletion = true;\n      var _didIteratorError = false;\n      var _iteratorError = undefined;\n\n      try {\n        for (var _iterator = this.zones[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n          var _zone = _step.value;\n          var _iteratorNormalCompletion4 = true;\n          var _didIteratorError4 = false;\n          var _iteratorError4 = undefined;\n\n          try {\n            for (var _iterator4 = this.actors[Symbol.iterator](), _step4; !(_iteratorNormalCompletion4 = (_step4 = _iterator4.next()).done); _iteratorNormalCompletion4 = true) {\n              var _actor2 = _step4.value;\n\n              if (_physics.Physics.checkCollision(_zone, _actor2)) {\n                var _iteratorNormalCompletion5 = true;\n                var _didIteratorError5 = false;\n                var _iteratorError5 = undefined;\n\n                try {\n                  for (var _iterator5 = _zone.effects[Symbol.iterator](), _step5; !(_iteratorNormalCompletion5 = (_step5 = _iterator5.next()).done); _iteratorNormalCompletion5 = true) {\n                    var effect = _step5.value;\n\n                    _actor2.effects.push(effect.copy());\n                  }\n                } catch (err) {\n                  _didIteratorError5 = true;\n                  _iteratorError5 = err;\n                } finally {\n                  try {\n                    if (!_iteratorNormalCompletion5 && _iterator5.return) {\n                      _iterator5.return();\n                    }\n                  } finally {\n                    if (_didIteratorError5) {\n                      throw _iteratorError5;\n                    }\n                  }\n                }\n              }\n            }\n          } catch (err) {\n            _didIteratorError4 = true;\n            _iteratorError4 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion4 && _iterator4.return) {\n                _iterator4.return();\n              }\n            } finally {\n              if (_didIteratorError4) {\n                throw _iteratorError4;\n              }\n            }\n          }\n        }\n        //--------------------------------\n\n        //Actors react to Effects and perform actions\n        //--------------------------------\n      } catch (err) {\n        _didIteratorError = true;\n        _iteratorError = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion && _iterator.return) {\n            _iterator.return();\n          }\n        } finally {\n          if (_didIteratorError) {\n            throw _iteratorError;\n          }\n        }\n      }\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = this.actors[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var actor = _step2.value;\n\n          //First react to Effects.\n          var _iteratorNormalCompletion6 = true;\n          var _didIteratorError6 = false;\n          var _iteratorError6 = undefined;\n\n          try {\n            for (var _iterator6 = actor.effects[Symbol.iterator](), _step6; !(_iteratorNormalCompletion6 = (_step6 = _iterator6.next()).done); _iteratorNormalCompletion6 = true) {\n              var _effect = _step6.value;\n\n              //TODO make this an external script\n              //----------------\n              if (_effect.name === \"push\" && actor.movable) {\n                actor.x += _effect.data.x || 0;\n                actor.y += _effect.data.y || 0;\n              }\n              //----------------\n            }\n\n            //If the actor is not busy, transform the intent into an action.\n          } catch (err) {\n            _didIteratorError6 = true;\n            _iteratorError6 = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion6 && _iterator6.return) {\n                _iterator6.return();\n              }\n            } finally {\n              if (_didIteratorError6) {\n                throw _iteratorError6;\n              }\n            }\n          }\n\n          if (actor.state !== AVO.ACTOR_ACTING && actor.state !== AVO.ACTOR_REACTING) {\n            if (actor.intent) {\n              actor.action = actor.intent;\n            } else {\n              actor.action = null;\n            }\n          }\n\n          //If the Actor has an action, perform it.\n          if (actor.action) {\n            if (this.actions[actor.action.name]) {\n              //Run a custom Action.\n              this.actions[actor.action.name].apply(this, [actor]);\n            } else if (_standardActions.StandardActions[actor.action.name]) {\n              //Run a standard Action.\n              _standardActions.StandardActions[actor.action.name].apply(this, [actor]);\n            }\n          }\n        }\n        //--------------------------------\n\n        //Physics\n        //--------------------------------\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n\n      this.physics();\n      //--------------------------------\n\n      //Cleanup Zones\n      //--------------------------------\n      for (var i = this.zones.length - 1; i >= 0; i--) {\n        var zone = this.zones[i];\n        if (!zone.hasInfiniteDuration()) {\n          zone.duration--;\n          if (zone.duration <= 0) {\n            this.zones.splice(i, 1);\n          }\n        }\n      }\n      //--------------------------------\n\n      //Cleanup Effects\n      //--------------------------------\n      var _iteratorNormalCompletion3 = true;\n      var _didIteratorError3 = false;\n      var _iteratorError3 = undefined;\n\n      try {\n        for (var _iterator3 = this.actors[Symbol.iterator](), _step3; !(_iteratorNormalCompletion3 = (_step3 = _iterator3.next()).done); _iteratorNormalCompletion3 = true) {\n          var _actor = _step3.value;\n\n          for (var _i2 = _actor.effects.length - 1; _i2 >= 0; _i2--) {\n            if (!_actor.effects[_i2].hasInfiniteDuration()) {\n              _actor.effects[_i2].duration--;\n              if (_actor.effects[_i2].duration <= 0) {\n                _actor.effects.splice(_i2, 1);\n              }\n            }\n          }\n        }\n        //--------------------------------\n\n        //Cleanup Input\n        //--------------------------------\n      } catch (err) {\n        _didIteratorError3 = true;\n        _iteratorError3 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion3 && _iterator3.return) {\n            _iterator3.return();\n          }\n        } finally {\n          if (_didIteratorError3) {\n            throw _iteratorError3;\n          }\n        }\n      }\n\n      if (this.pointer.state === AVO.INPUT_ENDED) {\n        this.pointer.duration = 0;\n        this.pointer.state = AVO.INPUT_IDLE;\n      }\n      for (var _i = 0; _i < this.keys.length; _i++) {\n        if (this.keys[_i].state === AVO.INPUT_ACTIVE) {\n          this.keys[_i].duration++;\n        } else if (this.keys[_i].state === AVO.INPUT_ENDED) {\n          this.keys[_i].duration = 0;\n          this.keys[_i].state = AVO.INPUT_IDLE;\n        }\n      }\n      //--------------------------------\n    }\n  }, {\n    key: \"run_comic\",\n    value: function run_comic() {\n      //Run Story script\n      this.story.run_comic();\n\n      if (!this.comicStrip) return;\n      var comic = this.comicStrip;\n\n      if (comic.state !== AVO.COMIC_STRIP_STATE_TRANSITIONING && comic.currentPanel >= comic.panels.length) {\n        comic.onFinish.apply(this);\n      }\n\n      switch (comic.state) {\n        case AVO.COMIC_STRIP_STATE_TRANSITIONING:\n          if (comic.counter < comic.transitionTime) {\n            comic.counter++;\n          } else {\n            comic.counter = 0;\n            comic.state = AVO.COMIC_STRIP_STATE_WAIT_BEFORE_INPUT;\n          }\n          break;\n        case AVO.COMIC_STRIP_STATE_WAIT_BEFORE_INPUT:\n          if (comic.counter < comic.waitTime) {\n            comic.counter++;\n          } else {\n            comic.counter = 0;\n            comic.state = AVO.COMIC_STRIP_STATE_IDLE;\n          }\n          break;\n        case AVO.COMIC_STRIP_STATE_IDLE:\n          if (this.pointer.state === AVO.INPUT_ACTIVE || this.keys[AVO.KEY_CODES.UP].state === AVO.INPUT_ACTIVE || this.keys[AVO.KEY_CODES.DOWN].state === AVO.INPUT_ACTIVE || this.keys[AVO.KEY_CODES.LEFT].state === AVO.INPUT_ACTIVE || this.keys[AVO.KEY_CODES.RIGHT].state === AVO.INPUT_ACTIVE || this.keys[AVO.KEY_CODES.SPACE].state === AVO.INPUT_ACTIVE || this.keys[AVO.KEY_CODES.ENTER].state === AVO.INPUT_ACTIVE) {\n            comic.currentPanel++;\n            comic.state = AVO.COMIC_STRIP_STATE_TRANSITIONING;\n          }\n          break;\n      }\n    }\n\n    //----------------------------------------------------------------\n\n  }, {\n    key: \"physics\",\n    value: function physics() {\n      //Check Actor collisions...\n      for (var a = 0; a < this.actors.length; a++) {\n        var actorA = this.actors[a];\n\n        //...with the terrain.\n        //if (this.room) {\n        if (actorA === this.playerActor && this.room) {}\n        /*const room = this.room;\n        const actorLeftCol = Math.floor(actorA.left / room.tileWidth);\n        const actorRightCol = Math.floor(actorA.right / room.tileWidth);\n        const actorTopRow = Math.floor(actorA.top / room.tileHeight);\n        const actorBottomRow = Math.floor(actorA.bottom / room.tileHeight);\n        \n        const topLeftTile = room.getFloorTile(actorLeftCol, actorTopRow);\n        const topRightTile = room.getFloorTile(actorRightCol, actorTopRow);\n        const bottomLeftTile = room.getFloorTile(actorLeftCol, actorBottomRow);\n        const bottomRightTile = room.getFloorTile(actorRightCol, actorBottomRow);\n        const topLeftCollision = topLeftTile && topLeftTile.solid;\n        const topRightCollision = topRightTile && topRightTile.solid;\n        const bottomLeftCollision = bottomLeftTile && bottomLeftTile.solid;\n        const bottomRightCollision = bottomRightTile && bottomRightTile.solid;\n        let correctionX = 0;\n        let correctionY = 0;\n        \n        if (topLeftCollision && !bottomRightCollision) { correctionX++; correctionY++; }\n        if (!topLeftCollision && bottomRightCollision) { correctionX--; correctionY--; }\n        if (topRightCollision && !bottomLeftCollision) { correctionX--; correctionY++; }\n        if (!topRightCollision && bottomLeftCollision) { correctionX++; correctionY--; }\n        \n        if (correctionX < 0) { actorA.right = actorRightCol * room.tileWidth + 1; }\n        else if (correctionX > 0) { actorA.left = (actorLeftCol + 1) * room.tileWidth + 1; }\n        if (correctionY < 0) { actorA.bottom = actorBottomRow * room.tileWidth + 1; }\n        else if (correctionY > 0) { actorA.top = (actorTopRow + 1) * room.tileWidth + 1; }*/\n\n\n        //...with other Actors.\n        for (var b = a + 1; b < this.actors.length; b++) {\n          var actorB = this.actors[b];\n          var collisionCorrection = _physics.Physics.checkCollision(actorA, actorB);\n\n          if (collisionCorrection) {\n            //TODO: Check if this needs to be (!!collisionCorrection).\n            actorA.x = collisionCorrection.ax;\n            actorA.y = collisionCorrection.ay;\n            actorB.x = collisionCorrection.bx;\n            actorB.y = collisionCorrection.by;\n          }\n        }\n      }\n    }\n\n    /*\n    isATouchingB(objA, objB) {\n      if (!objA || !objB) return false;\n      \n      if (objA.shape === AVO.SHAPE_CIRCLE && objB.shape === AVO.SHAPE_CIRCLE) {\n        const distX = objA.x - objB.x;\n        const distY = objA.y - objB.y;\n        const minimumDist = objA.radius + objB.radius;\n        if (distX * distX + distY * distY < minimumDist * minimumDist) {\n          return true;\n        }\n      }\n      \n      else if (objA.shape === AVO.SHAPE_SQUARE && objB.shape === AVO.SHAPE_SQUARE) {\n        if (objA.left < objB.right &&\n            objA.right > objB.left &&\n            objA.top < objB.bottom &&\n            objA.bottom > objB.top) {\n          return true;\n        }\n      }\n      \n      else if (objA.shape === AVO.SHAPE_CIRCLE && objB.shape === AVO.SHAPE_SQUARE) {\n        const distX = objA.x - Math.max(objB.left, Math.min(objB.right, objA.x));\n        const distY = objA.y - Math.max(objB.top, Math.min(objB.bottom, objA.y));\n        if (distX * distX + distY * distY < objA.radius * objA.radius) {\n          return true;\n        }\n      }\n      \n      else if (objA.shape === AVO.SHAPE_SQUARE && objB.shape === AVO.SHAPE_CIRCLE) {\n        const distX = objB.x - Math.max(objA.left, Math.min(objA.right, objB.x));\n        const distY = objB.y - Math.max(objA.top, Math.min(objA.bottom, objB.y));\n        if (distX * distX + distY * distY < objB.radius * objB.radius) {\n          return true;\n        }\n      }\n      \n      return false;\n    }\n    \n    correctCollision(objA, objB) {\n      if (!objA || !objB || !objA.solid || !objB.solid) return;\n      \n      let fractionA = 0;\n      let fractionB = 0;\n      if (objA.movable && objB.movable) {\n        fractionA = 0.5;\n        fractionB = 0.5;\n      } else if (objA.movable) {\n        fractionA = 1;\n      } else if (objB.movable) {\n        fractionB = 1;\n      }\n      \n      if (objA.shape === AVO.SHAPE_CIRCLE && objB.shape === AVO.SHAPE_CIRCLE) {\n        const distX = objB.x - objA.x;\n        const distY = objB.y - objA.y;\n        const dist = Math.sqrt(distX * distX + distY * distY);\n        const angle = Math.atan2(distY, distX);\n        const correctDist = objA.radius + objB.radius;\n        const cosAngle = Math.cos(angle);\n        const sinAngle = Math.sin(angle);\n        objA.x -= cosAngle * (correctDist - dist) * fractionA;\n        objA.y -= sinAngle * (correctDist - dist) * fractionA;\n        objB.x += cosAngle * (correctDist - dist) * fractionB;\n        objB.y += sinAngle * (correctDist - dist) * fractionB;\n      }\n      \n      else if (objA.shape === AVO.SHAPE_SQUARE && objB.shape === AVO.SHAPE_SQUARE) {\n        const distX = objB.x - objA.x;\n        const distY = objB.y - objA.y;\n        const correctDist = (objA.size + objB.size) / 2;\n        if (Math.abs(distX) > Math.abs(distY)) {\n          objA.x -= Math.sign(distX) * (correctDist - Math.abs(distX)) * fractionA;\n          objB.x += Math.sign(distX) * (correctDist - Math.abs(distX)) * fractionB;\n        } else {\n          objA.y -= Math.sign(distY) * (correctDist - Math.abs(distY)) * fractionA;\n          objB.y += Math.sign(distY) * (correctDist - Math.abs(distY)) * fractionB;\n        }\n      }\n      \n      else if (objA.shape === AVO.SHAPE_CIRCLE && objB.shape === AVO.SHAPE_SQUARE) {\n        const distX = objA.x - Math.max(objB.left, Math.min(objB.right, objA.x));\n        const distY = objA.y - Math.max(objB.top, Math.min(objB.bottom, objA.y));\n        const dist = Math.sqrt(distX * distX + distY * distY);\n        const angle = Math.atan2(distY, distX);\n        const correctDist = objA.radius;\n        const cosAngle = Math.cos(angle);\n        const sinAngle = Math.sin(angle);\n        objA.x += cosAngle * (correctDist - dist) * fractionA;\n        objA.y += sinAngle * (correctDist - dist) * fractionA;\n        objB.x -= cosAngle * (correctDist - dist) * fractionB;\n        objB.y -= sinAngle * (correctDist - dist) * fractionB;\n      }\n      \n      else if (objA.shape === AVO.SHAPE_SQUARE && objB.shape === AVO.SHAPE_CIRCLE) {\n        const distX = objB.x - Math.max(objA.left, Math.min(objA.right, objB.x));\n        const distY = objB.y - Math.max(objA.top, Math.min(objA.bottom, objB.y));\n        const dist = Math.sqrt(distX * distX + distY * distY);\n        const angle = Math.atan2(distY, distX);\n        const correctDist = objB.radius;\n        const cosAngle = Math.cos(angle);\n        const sinAngle = Math.sin(angle);\n        objA.x -= cosAngle * (correctDist - dist) * fractionA;\n        objA.y -= sinAngle * (correctDist - dist) * fractionA;\n        objB.x += cosAngle * (correctDist - dist) * fractionB;\n        objB.y += sinAngle * (correctDist - dist) * fractionB;\n      }\n    }\n    */\n\n    //----------------------------------------------------------------\n\n  }, {\n    key: \"paint\",\n    value: function paint() {\n      //Clear\n      this.context2d.clearRect(0, 0, this.canvasWidth, this.canvasHeight);\n\n      //Base colour\n      if (this.config.backgroundColour) {\n        this.context2d.beginPath();\n        this.context2d.rect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.context2d.fillStyle = this.config.backgroundColour;\n        this.context2d.fill();\n        this.context2d.closePath();\n      }\n\n      //Run Story script\n      this.story.prePaint();\n\n      if (!this.config.skipStandardPaint) {\n        switch (this.state) {\n          case AVO.STATE_START:\n            this.paint_start();\n            break;\n          case AVO.STATE_END:\n            this.paint_end();\n            break;\n          case AVO.STATE_ACTION:\n            this.paint_action();\n            break;\n          case AVO.STATE_COMIC:\n            this.paint_comic();\n            break;\n        }\n      }\n\n      //Run Story script\n      this.story.postPaint();\n    }\n  }, {\n    key: \"paint_start\",\n    value: function paint_start() {\n      var percentage = this.assetsTotal > 0 ? this.assetsLoaded / this.assetsTotal : 1;\n\n      this.context2d.font = AVO.DEFAULT_FONT;\n      this.context2d.textAlign = \"center\";\n      this.context2d.textBaseline = \"middle\";\n\n      if (this.assetsLoaded < this.assetsTotal) {\n        var rgb = Math.floor(percentage * 255);\n        this.context2d.beginPath();\n        this.context2d.rect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.context2d.fillStyle = \"rgba(\" + rgb + \",\" + rgb + \",\" + rgb + \",1)\";\n        this.context2d.fill();\n        this.context2d.fillStyle = \"#fff\";\n        this.context2d.fillText(\"Loading... (\" + this.assetsLoaded + \"/\" + this.assetsTotal + \")\", this.canvasWidth / 2, this.canvasHeight / 2);\n        this.context2d.closePath();\n      } else {\n        this.context2d.beginPath();\n        this.context2d.rect(0, 0, this.canvasWidth, this.canvasHeight);\n        this.context2d.fillStyle = \"#fff\";\n        this.context2d.fill();\n        this.context2d.fillStyle = \"#000\";\n        this.context2d.fillText(\"Adventure on!\", this.canvasWidth / 2, this.canvasHeight / 2);\n        this.context2d.closePath();\n      }\n    }\n  }, {\n    key: \"paint_end\",\n    value: function paint_end() {}\n  }, {\n    key: \"paint_action\",\n    value: function paint_action() {\n      //Arrange sprites by vertical order.\n      //--------------------------------\n      if (this.config.topDownView) {\n        this.actors.sort(function (a, b) {\n          return a.bottom - b.bottom;\n        });\n      }\n      //--------------------------------\n\n      //Paint room floor\n      //--------------------------------\n      var room = this.room;\n      if (room && room.spritesheet && room.spritesheet.loaded) {\n        for (var y = 0; y < room.height; y++) {\n          for (var x = 0; x < room.width; x++) {\n            var tile = room.floorTiles[y * room.width + x] !== undefined ? room.tileTypes[room.floorTiles[y * room.width + x]] : null;\n\n            if (!tile) continue;\n\n            var srcW = room.tileWidth;\n            var srcH = room.tileHeight;\n            var srcX = tile.sprite.col * srcW;\n            var srcY = tile.sprite.row * srcH;\n            var tgtX = Math.floor(x * srcW + this.camera.x);\n            var tgtY = Math.floor(y * srcH + this.camera.y);\n            var tgtW = Math.floor(srcW);\n            var tgtH = Math.floor(srcH);\n\n            this.context2d.drawImage(room.spritesheet.img, srcX, srcY, srcW, srcH, tgtX, tgtY, tgtW, tgtH);\n          }\n        }\n      }\n      //--------------------------------\n\n      //DEBUG: Paint hitboxes\n      //--------------------------------\n      if (this.config.debugMode) {\n        this.context2d.lineWidth = 1;\n        var coords = void 0;\n\n        //Zones\n        var _iteratorNormalCompletion7 = true;\n        var _didIteratorError7 = false;\n        var _iteratorError7 = undefined;\n\n        try {\n          for (var _iterator7 = this.zones[Symbol.iterator](), _step7; !(_iteratorNormalCompletion7 = (_step7 = _iterator7.next()).done); _iteratorNormalCompletion7 = true) {\n            var zone = _step7.value;\n\n            var durationPercentage = 1;\n            if (!zone.hasInfiniteDuration() && zone.startDuration > 0) {\n              durationPercentage = Math.max(0, zone.duration / zone.startDuration);\n            }\n            this.context2d.strokeStyle = \"rgba(204,51,51,\" + durationPercentage + \")\";\n\n            switch (zone.shape) {\n              case AVO.SHAPE_CIRCLE:\n                this.context2d.beginPath();\n                this.context2d.arc(zone.x + this.camera.x, zone.y + this.camera.y, zone.size / 2, 0, 2 * Math.PI);\n                this.context2d.stroke();\n                this.context2d.closePath();\n                break;\n              case AVO.SHAPE_SQUARE:\n                this.context2d.beginPath();\n                this.context2d.rect(zone.x + this.camera.x - zone.size / 2, zone.y + this.camera.y - zone.size / 2, zone.size, zone.size);\n                this.context2d.stroke();\n                this.context2d.closePath();\n                break;\n              case AVO.SHAPE_POLYGON:\n                //NOTE: Polygon doesn't account for shadowSize yet.\n                this.context2d.beginPath();\n                coords = zone.vertices;\n                if (coords.length >= 1) this.context2d.moveTo(coords[coords.length - 1].x + this.camera.x, coords[coords.length - 1].y + this.camera.y);\n                for (var i = 0; i < coords.length; i++) {\n                  this.context2d.lineTo(coords[i].x + this.camera.x, coords[i].y + this.camera.y);\n                }\n                this.context2d.stroke();\n                this.context2d.closePath();\n                break;\n            }\n          }\n\n          //Actors\n        } catch (err) {\n          _didIteratorError7 = true;\n          _iteratorError7 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion7 && _iterator7.return) {\n              _iterator7.return();\n            }\n          } finally {\n            if (_didIteratorError7) {\n              throw _iteratorError7;\n            }\n          }\n        }\n\n        this.context2d.strokeStyle = \"rgba(0,0,0,1)\";\n        var _iteratorNormalCompletion8 = true;\n        var _didIteratorError8 = false;\n        var _iteratorError8 = undefined;\n\n        try {\n          for (var _iterator8 = this.actors[Symbol.iterator](), _step8; !(_iteratorNormalCompletion8 = (_step8 = _iterator8.next()).done); _iteratorNormalCompletion8 = true) {\n            var actor = _step8.value;\n\n            switch (actor.shape) {\n              case AVO.SHAPE_CIRCLE:\n                this.context2d.beginPath();\n                this.context2d.arc(actor.x + this.camera.x, actor.y + this.camera.y, actor.size / 2, 0, 2 * Math.PI);\n                this.context2d.stroke();\n                this.context2d.closePath();\n                this.context2d.beginPath();\n                this.context2d.moveTo(actor.x + this.camera.x, actor.y + this.camera.y);\n                this.context2d.lineTo(actor.x + this.camera.x + Math.cos(actor.rotation) * actor.size, actor.y + this.camera.y + Math.sin(actor.rotation) * actor.size);\n                this.context2d.stroke();\n                this.context2d.closePath();\n                break;\n              case AVO.SHAPE_SQUARE:\n                this.context2d.beginPath();\n                this.context2d.rect(actor.x + this.camera.x - actor.size / 2, actor.y + this.camera.y - actor.size / 2, actor.size, actor.size);\n                this.context2d.stroke();\n                this.context2d.closePath();\n                break;\n              case AVO.SHAPE_POLYGON:\n                //NOTE: Polygon doesn't account for shadowSize yet.\n                this.context2d.beginPath();\n                coords = actor.vertices;\n                if (coords.length >= 1) this.context2d.moveTo(coords[coords.length - 1].x + this.camera.x, coords[coords.length - 1].y + this.camera.y);\n                for (var _i3 = 0; _i3 < coords.length; _i3++) {\n                  this.context2d.lineTo(coords[_i3].x + this.camera.x, coords[_i3].y + this.camera.y);\n                }\n                this.context2d.stroke();\n                this.context2d.closePath();\n                break;\n            }\n          }\n        } catch (err) {\n          _didIteratorError8 = true;\n          _iteratorError8 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion8 && _iterator8.return) {\n              _iterator8.return();\n            }\n          } finally {\n            if (_didIteratorError8) {\n              throw _iteratorError8;\n            }\n          }\n        }\n      }\n      //--------------------------------\n\n      //Paint sprites\n      //--------------------------------\n      for (var z = AVO.MIN_Z_INDEX; z <= AVO.MAX_Z_INDEX; z++) {\n        //Zones\n        var _iteratorNormalCompletion9 = true;\n        var _didIteratorError9 = false;\n        var _iteratorError9 = undefined;\n\n        try {\n          for (var _iterator9 = this.zones[Symbol.iterator](), _step9; !(_iteratorNormalCompletion9 = (_step9 = _iterator9.next()).done); _iteratorNormalCompletion9 = true) {\n            var _zone2 = _step9.value;\n\n            if (_zone2.z === z) {\n              this.paintSprite(_zone2);\n              _zone2.nextAnimationFrame();\n            }\n          }\n\n          //Actors\n        } catch (err) {\n          _didIteratorError9 = true;\n          _iteratorError9 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion9 && _iterator9.return) {\n              _iterator9.return();\n            }\n          } finally {\n            if (_didIteratorError9) {\n              throw _iteratorError9;\n            }\n          }\n        }\n\n        var _iteratorNormalCompletion10 = true;\n        var _didIteratorError10 = false;\n        var _iteratorError10 = undefined;\n\n        try {\n          for (var _iterator10 = this.actors[Symbol.iterator](), _step10; !(_iteratorNormalCompletion10 = (_step10 = _iterator10.next()).done); _iteratorNormalCompletion10 = true) {\n            var _actor3 = _step10.value;\n\n            if (_actor3.z === z) {\n              this.paintShadow(_actor3);\n            }\n          }\n        } catch (err) {\n          _didIteratorError10 = true;\n          _iteratorError10 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion10 && _iterator10.return) {\n              _iterator10.return();\n            }\n          } finally {\n            if (_didIteratorError10) {\n              throw _iteratorError10;\n            }\n          }\n        }\n\n        var _iteratorNormalCompletion11 = true;\n        var _didIteratorError11 = false;\n        var _iteratorError11 = undefined;\n\n        try {\n          for (var _iterator11 = this.actors[Symbol.iterator](), _step11; !(_iteratorNormalCompletion11 = (_step11 = _iterator11.next()).done); _iteratorNormalCompletion11 = true) {\n            var _actor4 = _step11.value;\n\n            if (_actor4.z === z) {\n              this.paintSprite(_actor4);\n              _actor4.nextAnimationFrame();\n            }\n          }\n        } catch (err) {\n          _didIteratorError11 = true;\n          _iteratorError11 = err;\n        } finally {\n          try {\n            if (!_iteratorNormalCompletion11 && _iterator11.return) {\n              _iterator11.return();\n            }\n          } finally {\n            if (_didIteratorError11) {\n              throw _iteratorError11;\n            }\n          }\n        }\n      }\n      //--------------------------------\n\n      //Paint room floor\n      //--------------------------------\n      if (room && room.spritesheet && room.spritesheet.loaded) {\n        for (var _y = 0; _y < room.height; _y++) {\n          for (var _x2 = 0; _x2 < room.width; _x2++) {\n            var _tile = room.ceilingTiles[_y * room.width + _x2] !== undefined ? room.tileTypes[room.ceilingTiles[_y * room.width + _x2]] : null;\n\n            if (!_tile) continue;\n\n            var _srcW = room.tileWidth;\n            var _srcH = room.tileHeight;\n            var _srcX = _tile.sprite.col * _srcW;\n            var _srcY = _tile.sprite.row * _srcH;\n            var _tgtX = Math.floor(_x2 * _srcW + this.camera.x);\n            var _tgtY = Math.floor(_y * _srcH + this.camera.y);\n            var _tgtW = Math.floor(_srcW);\n            var _tgtH = Math.floor(_srcH);\n\n            this.context2d.drawImage(room.spritesheet.img, _srcX, _srcY, _srcW, _srcH, _tgtX, _tgtY, _tgtW, _tgtH);\n          }\n        }\n      }\n      //--------------------------------\n\n      //DEBUG: Paint touch/mouse input\n      //--------------------------------\n      if (this.config.debugMode) {\n        this.context2d.strokeStyle = \"rgba(128,128,128,0.8)\";\n        this.context2d.lineWidth = 1;\n        this.context2d.beginPath();\n        this.context2d.arc(this.pointer.start.x, this.pointer.start.y, AVO.INPUT_DISTANCE_SENSITIVITY * 2 * this.canvasSizeRatio, 0, 2 * Math.PI);\n        this.context2d.stroke();\n        this.context2d.closePath();\n      }\n      //--------------------------------\n    }\n  }, {\n    key: \"paint_comic\",\n    value: function paint_comic() {\n      if (!this.comicStrip) return;\n      var comic = this.comicStrip;\n\n      this.context2d.beginPath();\n      this.context2d.rect(0, 0, this.canvasWidth, this.canvasHeight);\n      this.context2d.fillStyle = comic.background;\n      this.context2d.fill();\n      this.context2d.closePath();\n\n      switch (comic.state) {\n        case AVO.COMIC_STRIP_STATE_TRANSITIONING:\n          var offsetY = comic.transitionTime > 0 ? Math.floor(comic.counter / comic.transitionTime * -this.canvasHeight) : 0;\n          this.paintComicPanel(comic.getPreviousPanel(), offsetY);\n          this.paintComicPanel(comic.getCurrentPanel(), offsetY + this.canvasHeight);\n          break;\n        case AVO.COMIC_STRIP_STATE_WAIT_BEFORE_INPUT:\n          this.paintComicPanel(comic.getCurrentPanel());\n          break;\n        case AVO.COMIC_STRIP_STATE_IDLE:\n          this.paintComicPanel(comic.getCurrentPanel());\n          //TODO: Paint \"NEXT\" icon\n          break;\n      }\n    }\n  }, {\n    key: \"paintSprite\",\n    value: function paintSprite(obj) {\n      if (!obj || !obj.spritesheet || !obj.spritesheet.loaded || !obj.animationSet || !obj.animationSet.actions[obj.animationName]) return;\n\n      var animationSet = obj.animationSet;\n\n      var srcW = animationSet.tileWidth;\n      var srcH = animationSet.tileHeight;\n      var srcX = 0;\n      var srcY = 0;\n      if (animationSet.rule === AVO.ANIMATION_RULE_DIRECTIONAL) {\n        srcX = obj.direction * srcW;\n        srcY = animationSet.actions[obj.animationName].steps[obj.animationStep].row * srcH;\n      } else {\n        srcX = animationSet.actions[obj.animationName].steps[obj.animationStep].col * srcW;\n        srcY = animationSet.actions[obj.animationName].steps[obj.animationStep].row * srcH;\n      }\n\n      var tgtX = Math.floor(obj.x - srcW / 2 + animationSet.tileOffsetX + this.camera.x);\n      var tgtY = Math.floor(obj.y - srcH / 2 + animationSet.tileOffsetY + this.camera.y);\n      var tgtW = Math.floor(srcW);\n      var tgtH = Math.floor(srcH);\n\n      this.context2d.drawImage(obj.spritesheet.img, srcX, srcY, srcW, srcH, tgtX, tgtY, tgtW, tgtH);\n    }\n  }, {\n    key: \"paintShadow\",\n    value: function paintShadow(obj) {\n      if (!obj || !obj.shadowSize || obj.shadowSize <= 0) return;\n\n      var coords = void 0;\n      this.context2d.fillStyle = AVO.SHADOW_COLOUR;\n\n      switch (obj.shape) {\n        case AVO.SHAPE_CIRCLE:\n          this.context2d.beginPath();\n          this.context2d.arc(obj.x + this.camera.x, obj.y + this.camera.y, obj.size / 2 * obj.shadowSize, 0, 2 * Math.PI);\n          this.context2d.fill();\n          this.context2d.closePath();\n          break;\n        case AVO.SHAPE_SQUARE:\n          this.context2d.beginPath();\n          this.context2d.rect(obj.x + this.camera.x - obj.size / 2 * obj.shadowSize, obj.y + this.camera.y - obj.size / 2 * obj.shadowSize, obj.size * obj.shadowSize, obj.size * obj.shadowSize);\n          this.context2d.fill();\n          this.context2d.closePath();\n          break;\n        case AVO.SHAPE_POLYGON:\n          //NOTE: Polygon doesn't account for shadowSize yet.\n          this.context2d.beginPath();\n          coords = obj.vertices;\n          if (coords.length >= 1) this.context2d.moveTo(coords[coords.length - 1].x + this.camera.x, coords[coords.length - 1].y + this.camera.y);\n          for (var i = 0; i < coords.length; i++) {\n            this.context2d.lineTo(coords[i].x + this.camera.x, coords[i].y + this.camera.y);\n          }\n          this.context2d.fill();\n          this.context2d.closePath();\n          break;\n      }\n    }\n  }, {\n    key: \"paintComicPanel\",\n    value: function paintComicPanel() {\n      var panel = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n      var offsetY = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 0;\n\n      if (!panel || !panel.loaded) return;\n\n      var ratioX = this.canvasWidth / panel.img.width;\n      var ratioY = this.canvasHeight / panel.img.height;\n      var ratio = Math.min(1, Math.min(ratioX, ratioY));\n\n      var srcX = 0;\n      var srcY = 0;\n      var srcW = panel.img.width;\n      var srcH = panel.img.height;\n\n      var tgtW = panel.img.width * ratio;\n      var tgtH = panel.img.height * ratio;\n      var tgtX = (this.canvasWidth - tgtW) / 2; //TODO\n      var tgtY = (this.canvasHeight - tgtH) / 2 + offsetY; //TODO\n\n      this.context2d.drawImage(panel.img, srcX, srcY, srcW, srcH, tgtX, tgtY, tgtW, tgtH);\n    }\n\n    //----------------------------------------------------------------\n\n  }, {\n    key: \"onPointerStart\",\n    value: function onPointerStart(e) {\n      this.pointer.state = AVO.INPUT_ACTIVE;\n      this.pointer.duration = 1;\n      this.pointer.start = this.getPointerXY(e);\n      this.pointer.now = this.pointer.start;\n      return _utility.Utility.stopEvent(e);\n    }\n  }, {\n    key: \"onPointerMove\",\n    value: function onPointerMove(e) {\n      if (this.pointer.state === AVO.INPUT_ACTIVE) {\n        this.pointer.now = this.getPointerXY(e);\n      }\n      return _utility.Utility.stopEvent(e);\n    }\n  }, {\n    key: \"onPointerEnd\",\n    value: function onPointerEnd(e) {\n      this.pointer.state = AVO.INPUT_ENDED;\n      //this.pointer.now = this.getPointerXY(e);\n      return _utility.Utility.stopEvent(e);\n    }\n  }, {\n    key: \"getPointerXY\",\n    value: function getPointerXY(e) {\n      var clientX = 0;\n      var clientY = 0;\n      if (e.clientX && e.clientY) {\n        clientX = e.clientX;\n        clientY = e.clientY;\n      } else if (e.touches && e.touches.length > 0 && e.touches[0].clientX && e.touches[0].clientY) {\n        clientX = e.touches[0].clientX;\n        clientY = e.touches[0].clientY;\n      }\n      var inputX = (clientX - this.boundingBox.left) * this.canvasSizeRatio;\n      var inputY = (clientY - this.boundingBox.top) * this.canvasSizeRatio;\n      return { x: inputX, y: inputY };\n    }\n\n    //----------------------------------------------------------------\n\n  }, {\n    key: \"onKeyDown\",\n    value: function onKeyDown(e) {\n      var keyCode = _utility.Utility.getKeyCode(e);\n      if (keyCode > 0 && keyCode < AVO.MAX_KEYS && this.keys[keyCode].state != AVO.INPUT_ACTIVE) {\n        this.keys[keyCode].state = AVO.INPUT_ACTIVE;\n        this.keys[keyCode].duration = 1;\n      } //if keyCode == 0, there's an error.\n    }\n  }, {\n    key: \"onKeyUp\",\n    value: function onKeyUp(e) {\n      var keyCode = _utility.Utility.getKeyCode(e);\n      if (keyCode > 0 && keyCode < AVO.MAX_KEYS) {\n        this.keys[keyCode].state = AVO.INPUT_ENDED;\n      } //if keyCode == 0, there's an error.\n    }\n\n    //----------------------------------------------------------------\n\n  }, {\n    key: \"updateSize\",\n    value: function updateSize() {\n      if (this.config.autoFitCanvas) {\n        var bestFit = Math.min(this.html.app.offsetWidth / this.canvasWidth, this.html.app.offsetHeight / this.canvasHeight);\n\n        this.html.canvas.style = \"width: \" + Math.round(bestFit * this.canvasWidth) + \"px; \" + \"height: \" + Math.round(bestFit * this.canvasHeight) + \"px; \";\n      }\n\n      var boundingBox = this.html.canvas.getBoundingClientRect ? this.html.canvas.getBoundingClientRect() : { left: 0, top: 0 };\n      this.boundingBox = boundingBox;\n      //this.sizeRatioX = this.canvasWidth / this.boundingBox.width;\n      //this.sizeRatioY = this.canvasHeight / this.boundingBox.height;\n      this.canvasSizeRatio = Math.min(this.canvasWidth / this.boundingBox.width, this.canvasHeight / this.boundingBox.height);\n    }\n  }]);\n\n  return AvO;\n}();\n\n//==============================================================================\n\n//# sourceURL=webpack:///./src/avo/index.js?");

/***/ }),

/***/ "./src/avo/physics.js":
/*!****************************!*\
  !*** ./src/avo/physics.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Physics = undefined;\n\nvar _constants = __webpack_require__(/*! ./constants.js */ \"./src/avo/constants.js\");\n\nvar AVO = _interopRequireWildcard(_constants);\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _toConsumableArray(arr) { if (Array.isArray(arr)) { for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) { arr2[i] = arr[i]; } return arr2; } else { return Array.from(arr); } } /*\n                                                                                                                                                                                                    Physics Classes\n                                                                                                                                                                                                    ===============\n                                                                                                                                                                                                    \n                                                                                                                                                                                                    (Shaun A. Noordin || shaunanoordin.com || 20170209)\n                                                                                                                                                                                                    ********************************************************************************\n                                                                                                                                                                                                     */\n\n//Naming note: all caps.\n\nvar USE_CIRCLE_APPROXIMATION = false;\n\nvar Physics = exports.Physics = {\n  //----------------------------------------------------------------\n\n  /*  Checks if objA is touching objB.\n      If true, returns the corrected coordinates for objA and objB, in form:\n        { ax, ay, bx, by }\n      If false, returns null.\n   */\n  checkCollision: function checkCollision(objA, objB) {\n    if (!objA || !objB || objA === objB) return null;\n\n    if (objA.shape === AVO.SHAPE_CIRCLE && objB.shape === AVO.SHAPE_CIRCLE) {\n      return this.checkCollision_circleCircle(objA, objB);\n    } else if ((objA.shape === AVO.SHAPE_SQUARE || objA.shape === AVO.SHAPE_POLYGON) && (objB.shape === AVO.SHAPE_SQUARE || objB.shape === AVO.SHAPE_POLYGON)) {\n      return this.checkCollision_polygonPolygon(objA, objB);\n    } else if (objA.shape === AVO.SHAPE_CIRCLE && (objB.shape === AVO.SHAPE_SQUARE || objB.shape === AVO.SHAPE_POLYGON)) {\n      if (USE_CIRCLE_APPROXIMATION) return this.checkCollision_polygonPolygon(objA, objB);\n\n      return this.checkCollision_circlePolygon(objA, objB);\n    } else if ((objA.shape === AVO.SHAPE_SQUARE || objA.shape === AVO.SHAPE_POLYGON) && objB.shape === AVO.SHAPE_CIRCLE) {\n      if (USE_CIRCLE_APPROXIMATION) return this.checkCollision_polygonPolygon(objA, objB);\n\n      var correction = this.checkCollision_circlePolygon(objB, objA);\n      if (correction) {\n        correction = {\n          ax: correction.bx,\n          ay: correction.by,\n          bx: correction.ax,\n          by: correction.ay\n        };\n      }\n      return correction;\n    }\n\n    return null;\n  },\n\n  //----------------------------------------------------------------\n\n  checkCollision_circleCircle: function checkCollision_circleCircle(objA, objB) {\n    var fractionA = 0;\n    var fractionB = 0;\n    if (!objA.solid || !objB.solid) {\n      //If either object isn't solid, there's no collision correction.\n    } else if (objA.movable && objB.movable) {\n      fractionA = 0.5;\n      fractionB = 0.5;\n    } else if (objA.movable) {\n      fractionA = 1;\n    } else if (objB.movable) {\n      fractionB = 1;\n    }\n\n    var distX = objB.x - objA.x;\n    var distY = objB.y - objA.y;\n    var dist = Math.sqrt(distX * distX + distY * distY);\n    var minimumDist = objA.radius + objB.radius;\n    if (dist < minimumDist) {\n      var angle = Math.atan2(distY, distX);\n      var correctDist = minimumDist;\n      var cosAngle = Math.cos(angle);\n      var sinAngle = Math.sin(angle);\n\n      return {\n        ax: objA.x - cosAngle * (correctDist - dist) * fractionA,\n        ay: objA.y - sinAngle * (correctDist - dist) * fractionA,\n        bx: objB.x + cosAngle * (correctDist - dist) * fractionB,\n        by: objB.y + sinAngle * (correctDist - dist) * fractionB\n      };\n    }\n\n    return null;\n  },\n\n  //----------------------------------------------------------------\n\n  checkCollision_polygonPolygon: function checkCollision_polygonPolygon(objA, objB) {\n    var fractionA = 0;\n    var fractionB = 0;\n    if (!objA.solid || !objB.solid) {\n      //If either object isn't solid, there's no collision correction.\n    } else if (objA.movable && objB.movable) {\n      fractionA = 0.5;\n      fractionB = 0.5;\n    } else if (objA.movable) {\n      fractionA = 1;\n    } else if (objB.movable) {\n      fractionB = 1;\n    }\n\n    var correction = null;\n    var verticesA = objA.vertices;\n    var verticesB = objB.vertices;\n    var projectionAxes = [].concat(_toConsumableArray(this.getShapeNormals(objA)), _toConsumableArray(this.getShapeNormals(objB)));\n    for (var i = 0; i < projectionAxes.length; i++) {\n      var axis = projectionAxes[i];\n      var projectionA = { min: Infinity, max: -Infinity };\n      var projectionB = { min: Infinity, max: -Infinity };\n\n      for (var j = 0; j < verticesA.length; j++) {\n        var val = this.dotProduct(axis, verticesA[j]);\n        projectionA.min = Math.min(projectionA.min, val);\n        projectionA.max = Math.max(projectionA.max, val);\n      }\n      for (var _j = 0; _j < verticesB.length; _j++) {\n        var _val = this.dotProduct(axis, verticesB[_j]);\n        projectionB.min = Math.min(projectionB.min, _val);\n        projectionB.max = Math.max(projectionB.max, _val);\n      }\n\n      var overlap = Math.max(0, Math.min(projectionA.max, projectionB.max) - Math.max(projectionA.min, projectionB.min));\n      if (!correction || overlap < correction.magnitude) {\n        var sign = Math.sign(projectionB.min + projectionB.max - (projectionA.min + projectionA.max));\n        correction = {\n          magnitude: overlap,\n          x: axis.x * overlap * sign,\n          y: axis.y * overlap * sign\n        };\n      }\n    }\n\n    if (correction && correction.magnitude > 0) {\n      return {\n        ax: objA.x - correction.x * fractionA,\n        ay: objA.y - correction.y * fractionA,\n        bx: objB.x + correction.x * fractionB,\n        by: objB.y + correction.y * fractionB\n      };\n    }\n\n    return null;\n  },\n\n  //----------------------------------------------------------------\n\n  checkCollision_circlePolygon: function checkCollision_circlePolygon(objA, objB) {\n    var fractionA = 0;\n    var fractionB = 0;\n    if (!objA.solid || !objB.solid) {\n      //If either object isn't solid, there's no collision correction.\n    } else if (objA.movable && objB.movable) {\n      fractionA = 0.5;\n      fractionB = 0.5;\n    } else if (objA.movable) {\n      fractionA = 1;\n    } else if (objB.movable) {\n      fractionB = 1;\n    }\n\n    var distX = objB.x - objA.x;\n    var distY = objB.y - objA.y;\n    var dist = Math.sqrt(distX * distX + distY * distY);\n    var angle = Math.atan2(distY, distX);\n    var centreToCentreAxis = dist !== 0 ? { x: distX / dist, y: distY / dist } : { x: 0, y: 0 };\n\n    var correction = null;\n    var verticesB = objB.vertices;\n    var projectionAxes = [centreToCentreAxis].concat(_toConsumableArray(this.getShapeNormals(objB)));\n    for (var i = 0; i < projectionAxes.length; i++) {\n      var axis = projectionAxes[i];\n      var scalarA = this.dotProduct(axis, { x: objA.x, y: objA.y });\n      var projectionA = { min: scalarA - objA.radius, max: scalarA + objA.radius };\n      var projectionB = { min: Infinity, max: -Infinity };\n\n      for (var j = 0; j < verticesB.length; j++) {\n        var val = this.dotProduct(axis, verticesB[j]);\n        projectionB.min = Math.min(projectionB.min, val);\n        projectionB.max = Math.max(projectionB.max, val);\n      }\n\n      var overlap = Math.max(0, Math.min(projectionA.max, projectionB.max) - Math.max(projectionA.min, projectionB.min));\n      if (!correction || overlap < correction.magnitude) {\n        var sign = Math.sign(projectionB.min + projectionB.max - (projectionA.min + projectionA.max));\n        correction = {\n          magnitude: overlap,\n          x: axis.x * overlap * sign,\n          y: axis.y * overlap * sign\n        };\n      }\n    }\n\n    if (correction && correction.magnitude > 0) {\n      return {\n        ax: objA.x - correction.x * fractionA,\n        ay: objA.y - correction.y * fractionA,\n        bx: objB.x + correction.x * fractionB,\n        by: objB.y + correction.y * fractionB\n      };\n    }\n  },\n\n  //----------------------------------------------------------------\n\n  /*  Gets the NORMALISED normals for each edge of the object's shape. Assumes the object has the 'vertices' property.\n   */\n  getShapeNormals: function getShapeNormals(obj) {\n    var vertices = obj.vertices;\n    if (!vertices) return null;\n    if (vertices.length < 2) return []; //Look you need to have at least three vertices to be a shape.\n\n    //First, calculate the edges connecting each vertice.\n    //--------------------------------\n    var edges = [];\n    for (var i = 0; i < vertices.length; i++) {\n      var p1 = vertices[i];\n      var p2 = vertices[(i + 1) % vertices.length];\n      edges.push({\n        x: p2.x - p1.x,\n        y: p2.y - p1.y\n      });\n    }\n    //--------------------------------\n\n    //Calculate the NORMALISED normals for each edge.\n    //--------------------------------\n    return edges.map(function (edge) {\n      var dist = Math.sqrt(edge.x * edge.x + edge.y * edge.y);\n      if (dist === 0) return { x: 0, y: 0 };\n      return {\n        x: -edge.y / dist,\n        y: edge.x / dist\n      };\n    });\n    //--------------------------------\n  },\n\n  //----------------------------------------------------------------\n\n  dotProduct: function dotProduct(vectorA, vectorB) {\n    if (!vectorA || !vectorB) return null;\n    return vectorA.x * vectorB.x + vectorA.y * vectorB.y;\n  }\n};\n\n//# sourceURL=webpack:///./src/avo/physics.js?");

/***/ }),

/***/ "./src/avo/room.js":
/*!*************************!*\
  !*** ./src/avo/room.js ***!
  \*************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*  \nRoom\n====\n\n(Shaun A. Noordin || shaunanoordin.com || 20170331)\n********************************************************************************\n */\n\nvar Room = exports.Room = function () {\n  function Room() {\n    _classCallCheck(this, Room);\n\n    this.width = 1;\n    this.height = 1;\n    this.tileWidth = 64;\n    this.tileHeight = 64;\n\n    this.spritesheet = null;\n    this.floorTiles = [];\n    this.ceilingTiles = [];\n    this.tileTypes = [];\n  }\n\n  _createClass(Room, [{\n    key: \"getFloorTile\",\n    value: function getFloorTile(x, y) {\n      if (x < 0 || y < 0 || x >= this.width || y >= this.height) return null;\n\n      var index = y * this.width + x;\n      if (this.floorTiles[index]) {\n        return this.tileTypes[this.floorTiles[index]];\n      }\n\n      return null;\n    }\n  }]);\n\n  return Room;\n}();\n\nvar RoomTile = exports.RoomTile = function RoomTile(name, spriteCol, spriteRow, solid) {\n  _classCallCheck(this, RoomTile);\n\n  this.name = name;\n  this.sprite = {\n    col: spriteCol,\n    row: spriteRow\n  };\n  this.solid = solid;\n};\n\n//# sourceURL=webpack:///./src/avo/room.js?");

/***/ }),

/***/ "./src/avo/standard-actions.js":
/*!*************************************!*\
  !*** ./src/avo/standard-actions.js ***!
  \*************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.StandardActions = undefined;\n\nvar _constants = __webpack_require__(/*! ./constants.js */ \"./src/avo/constants.js\");\n\nvar AVO = _interopRequireWildcard(_constants);\n\nvar _entities = __webpack_require__(/*! ./entities.js */ \"./src/avo/entities.js\");\n\nvar _effect = __webpack_require__(/*! ./effect.js */ \"./src/avo/effect.js\");\n\nvar _utility = __webpack_require__(/*! ./utility.js */ \"./src/avo/utility.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\n/*  \nAvO Standard Actions\n====================\n\n(Shaun A. Noordin || shaunanoordin.com || 20161008)\n********************************************************************************\n */\n\nvar StandardActions = exports.StandardActions = {}; //Naming note: all caps.\n\n\nStandardActions[AVO.ACTION.IDLE] = function (actor) {\n  actor.state = AVO.ACTOR_IDLE;\n  actor.playAnimation(AVO.ACTION.IDLE);\n};\n\nStandardActions[AVO.ACTION.MOVING] = function (actor) {\n  var angle = actor.action.angle || 0;\n  var speed = actor.attributes[AVO.ATTR.SPEED] || 0;\n  actor.x += Math.cos(angle) * speed;\n  actor.y += Math.sin(angle) * speed;\n  actor.rotation = angle;\n  actor.state = AVO.ACTOR_MOVING;\n  actor.playAnimation(AVO.ACTION.MOVING);\n};\n\nStandardActions[AVO.ACTION.PRIMARY] = function (actor) {\n  //TODO This is just a placeholder\n  //................\n  var PUSH_POWER = 12;\n  var ZONE_SIZE = this.playerActor.size;\n  var distance = this.playerActor.radius + ZONE_SIZE / 2;\n  var x = this.playerActor.x + Math.cos(this.playerActor.rotation) * distance;\n  var y = this.playerActor.y + Math.sin(this.playerActor.rotation) * distance;;\n  var newZone = new _entities.Zone(\"\", x, y, ZONE_SIZE, AVO.SHAPE_CIRCLE, 5, [new _effect.Effect(\"push\", { x: Math.cos(this.playerActor.rotation) * PUSH_POWER, y: Math.sin(this.playerActor.rotation) * PUSH_POWER }, 2, AVO.STACKING_RULE_ADD)]);\n  this.zones.push(newZone);\n  actor.playAnimation(AVO.ACTION.PRIMARY);\n  //................\n};\n\n//# sourceURL=webpack:///./src/avo/standard-actions.js?");

/***/ }),

/***/ "./src/avo/story.js":
/*!**************************!*\
  !*** ./src/avo/story.js ***!
  \**************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*  \nAvO Adventure Story\n===================\n\n(Shaun A. Noordin || shaunanoordin.com || 20170322)\n********************************************************************************\n */\n\nvar Story = exports.Story = function () {\n  function Story() {\n    _classCallCheck(this, Story);\n\n    this.avo = null; //Reference to the AvO game engine, automatically set when\n    //the AvO engine is initialised.\n\n    this.init = this.init.bind(this);\n\n    this.run_start = this.run_start.bind(this);\n    this.run_end = this.run_end.bind(this);\n    this.run_action = this.run_action.bind(this);\n    this.run_comic = this.run_comic.bind(this);\n\n    this.preRun = this.preRun.bind(this);\n    this.postRun = this.postRun.bind(this);\n\n    this.prePaint = this.prePaint.bind(this);\n    this.postPaint = this.postPaint.bind(this);\n  }\n\n  _createClass(Story, [{\n    key: \"init\",\n    value: function init() {}\n  }, {\n    key: \"run_start\",\n    value: function run_start() {}\n  }, {\n    key: \"run_end\",\n    value: function run_end() {}\n  }, {\n    key: \"run_action\",\n    value: function run_action() {}\n  }, {\n    key: \"run_comic\",\n    value: function run_comic() {}\n  }, {\n    key: \"preRun\",\n    value: function preRun() {}\n  }, {\n    key: \"postRun\",\n    value: function postRun() {}\n  }, {\n    key: \"prePaint\",\n    value: function prePaint() {}\n  }, {\n    key: \"postPaint\",\n    value: function postPaint() {}\n  }]);\n\n  return Story;\n}();\n\n//# sourceURL=webpack:///./src/avo/story.js?");

/***/ }),

/***/ "./src/avo/utility.js":
/*!****************************!*\
  !*** ./src/avo/utility.js ***!
  \****************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Utility = undefined;\nexports.ImageAsset = ImageAsset;\n\nvar _constants = __webpack_require__(/*! ./constants.js */ \"./src/avo/constants.js\");\n\nvar Utility = exports.Utility = {\n  randomInt: function randomInt(min, max) {\n    var a = min < max ? min : max;\n    var b = min < max ? max : min;\n    return Math.floor(a + Math.random() * (b - a + 1));\n  },\n\n  stopEvent: function stopEvent(e) {\n    //var eve = e || window.event;\n    e.preventDefault && e.preventDefault();\n    e.stopPropagation && e.stopPropagation();\n    e.returnValue = false;\n    e.cancelBubble = true;\n    return false;\n  },\n\n  getKeyCode: function getKeyCode(e) {\n    //KeyboardEvent.keyCode is the most reliable identifier for a keyboard event\n    //at the moment, but unfortunately it's being deprecated.\n    if (e.keyCode) {\n      return e.keyCode;\n    }\n\n    //KeyboardEvent.code and KeyboardEvent.key are the 'new' standards, but it's\n    //far from being standardised between browsers.\n    if (e.code && _constants.KEY_VALUES[e.code]) {\n      return _constants.KEY_VALUES[e.code];\n    } else if (e.key && _constants.KEY_VALUES[e.key]) {\n      return _constants.KEY_VALUES[e.key];\n    }\n\n    return 0;\n  }\n}; /*\n   Utility Classes\n   ===============\n   \n   (Shaun A. Noordin || shaunanoordin.com || 20160901)\n   ********************************************************************************\n    */\n\nfunction ImageAsset(url) {\n  this.url = url;\n  this.img = null;\n  this.loaded = false;\n  this.img = new Image();\n  this.img.onload = function () {\n    this.loaded = true;\n  }.bind(this);\n  this.img.src = this.url;\n}\n\n//# sourceURL=webpack:///./src/avo/utility.js?");

/***/ }),

/***/ "./src/example-adventure/index.js":
/*!****************************************!*\
  !*** ./src/example-adventure/index.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.ExampleAdventure = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _constants = __webpack_require__(/*! ../avo/constants.js */ \"./src/avo/constants.js\");\n\nvar AVO = _interopRequireWildcard(_constants);\n\nvar _story = __webpack_require__(/*! ../avo/story.js */ \"./src/avo/story.js\");\n\nvar _comicStrip = __webpack_require__(/*! ../avo/comic-strip.js */ \"./src/avo/comic-strip.js\");\n\nvar _entities = __webpack_require__(/*! ../avo/entities.js */ \"./src/avo/entities.js\");\n\nvar _utility = __webpack_require__(/*! ../avo/utility.js */ \"./src/avo/utility.js\");\n\nvar _physics = __webpack_require__(/*! ../avo/physics.js */ \"./src/avo/physics.js\");\n\nvar _rooms = __webpack_require__(/*! ./rooms.js */ \"./src/example-adventure/rooms.js\");\n\nfunction _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) newObj[key] = obj[key]; } } newObj.default = obj; return newObj; } }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; } /*\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               Example Adventure\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               While AvO is the adventure game engine, this is a specific implementation of an\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               adventure game idea.\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               \n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                               (Shaun A. Noordin || shaunanoordin.com || 20170329)\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                */\n\nvar ExampleAdventure = exports.ExampleAdventure = function (_Story) {\n  _inherits(ExampleAdventure, _Story);\n\n  function ExampleAdventure() {\n    _classCallCheck(this, ExampleAdventure);\n\n    var _this = _possibleConstructorReturn(this, (ExampleAdventure.__proto__ || Object.getPrototypeOf(ExampleAdventure)).call(this));\n\n    _this.init = _this.init.bind(_this);\n    _this.run_start = _this.run_start.bind(_this);\n    _this.run_action = _this.run_action.bind(_this);\n    _this.prePaint = _this.prePaint.bind(_this);\n\n    _this.playComic1 = _this.playComic1.bind(_this);\n    _this.finishComic1 = _this.finishComic1.bind(_this);\n    _this.prepareRoom = _this.prepareRoom.bind(_this);\n    _this.enterFirstRoom = _this.enterFirstRoom.bind(_this);\n    return _this;\n  }\n\n  _createClass(ExampleAdventure, [{\n    key: \"init\",\n    value: function init() {\n      var avo = this.avo;\n\n      //Config\n      //--------------------------------\n      avo.config.debugMode = true;\n      //--------------------------------\n\n      //Images\n      //--------------------------------\n      avo.assets.images.actor = new _utility.ImageAsset(\"assets/example-adventure/actor-female-2017-07.png\");\n      avo.assets.images.boxes = new _utility.ImageAsset(\"assets/example-nonita-60/boxes.png\");\n      avo.assets.images.plates = new _utility.ImageAsset(\"assets/example-nonita-60/plates.png\");\n      avo.assets.images.walls = new _utility.ImageAsset(\"assets/example-nonita-60/walls.png\");\n      avo.assets.images.roomTiles = new _utility.ImageAsset(\"assets/example-adventure/room-tiles.png\");\n\n      avo.assets.images.comicPanel1A = new _utility.ImageAsset(\"assets/example-adventure/comic-panel-1a.png\");\n      //--------------------------------\n\n      //Animations\n      //--------------------------------\n      var STEPS_PER_SECOND = AVO.FRAMES_PER_SECOND / 10;\n      avo.animationSets = {\n        actor: {\n          rule: AVO.ANIMATION_RULE_DIRECTIONAL,\n          tileWidth: 64,\n          tileHeight: 64,\n          tileOffsetX: 0,\n          tileOffsetY: -24, //-16,\n          actions: {\n            idle: {\n              loop: true,\n              steps: [{ row: 0, duration: 1 }]\n            },\n            moving: {\n              loop: true,\n              steps: [{ row: 1, duration: STEPS_PER_SECOND }, { row: 2, duration: STEPS_PER_SECOND * 2 }, { row: 1, duration: STEPS_PER_SECOND }, { row: 3, duration: STEPS_PER_SECOND * 2 }]\n            }\n          }\n        },\n\n        box: {\n          rule: AVO.ANIMATION_RULE_BASIC,\n          tileWidth: 32,\n          tileHeight: 64,\n          tileOffsetX: 0,\n          tileOffsetY: -16,\n          actions: {\n            idle: {\n              loop: true,\n              steps: [{ col: 1, row: 0, duration: 1 }]\n            },\n\n            red: {\n              loop: true,\n              steps: [{ col: 0, row: 1, duration: 1 }]\n            },\n            red_glow: {\n              loop: true,\n              steps: [{ col: 1, row: 1, duration: STEPS_PER_SECOND * 10 }, { col: 2, row: 1, duration: STEPS_PER_SECOND }, { col: 3, row: 1, duration: STEPS_PER_SECOND * 5 }, { col: 2, row: 1, duration: STEPS_PER_SECOND }]\n            },\n\n            blue: {\n              loop: true,\n              steps: [{ col: 0, row: 2, duration: 1 }]\n            },\n            blue_glow: {\n              loop: true,\n              steps: [{ col: 1, row: 2, duration: STEPS_PER_SECOND * 10 }, { col: 2, row: 2, duration: STEPS_PER_SECOND }, { col: 3, row: 2, duration: STEPS_PER_SECOND * 5 }, { col: 2, row: 2, duration: STEPS_PER_SECOND }]\n            },\n\n            yellow: {\n              loop: true,\n              steps: [{ col: 0, row: 3, duration: 1 }]\n            },\n            yellow_glow: {\n              loop: true,\n              steps: [{ col: 1, row: 3, duration: STEPS_PER_SECOND * 10 }, { col: 2, row: 3, duration: STEPS_PER_SECOND }, { col: 3, row: 3, duration: STEPS_PER_SECOND * 5 }, { col: 2, row: 3, duration: STEPS_PER_SECOND }]\n            }\n          }\n        },\n\n        plate: {\n          rule: AVO.ANIMATION_RULE_BASIC,\n          tileWidth: 64,\n          tileHeight: 64,\n          tileOffsetX: 0,\n          tileOffsetY: 0,\n          actions: {\n            idle: {\n              loop: true,\n              steps: [{ col: 0, row: 0, duration: 1 }]\n            },\n\n            red: {\n              loop: true,\n              steps: [{ col: 0, row: 1, duration: 1 }]\n            },\n            red_glow: {\n              loop: true,\n              steps: [{ col: 1, row: 1, duration: STEPS_PER_SECOND * 10 }, { col: 2, row: 1, duration: STEPS_PER_SECOND }, { col: 3, row: 1, duration: STEPS_PER_SECOND * 5 }, { col: 2, row: 1, duration: STEPS_PER_SECOND }]\n            },\n\n            blue: {\n              loop: true,\n              steps: [{ col: 0, row: 2, duration: 1 }]\n            },\n            blue_glow: {\n              loop: true,\n              steps: [{ col: 1, row: 2, duration: STEPS_PER_SECOND * 10 }, { col: 2, row: 2, duration: STEPS_PER_SECOND }, { col: 3, row: 2, duration: STEPS_PER_SECOND * 5 }, { col: 2, row: 2, duration: STEPS_PER_SECOND }]\n            },\n\n            yellow: {\n              loop: true,\n              steps: [{ col: 0, row: 3, duration: 1 }]\n            },\n            yellow_glow: {\n              loop: true,\n              steps: [{ col: 1, row: 3, duration: STEPS_PER_SECOND * 10 }, { col: 2, row: 3, duration: STEPS_PER_SECOND }, { col: 3, row: 3, duration: STEPS_PER_SECOND * 5 }, { col: 2, row: 3, duration: STEPS_PER_SECOND }]\n            }\n          }\n        },\n\n        wall: {\n          rule: AVO.ANIMATION_RULE_BASIC,\n          tileWidth: 512,\n          tileHeight: 128,\n          tileOffsetX: 0,\n          tileOffsetY: 0,\n          actions: {\n            long_wall: {\n              loop: true,\n              steps: [{ col: 0, row: 0, duration: 1 }]\n            },\n            short_wall: {\n              loop: true,\n              steps: [{ col: 0, row: 1, duration: 1 }]\n            }\n          }\n        }\n      };\n\n      //Process Animations; expand steps to many frames per steps.\n      for (var animationTitle in avo.animationSets) {\n        var animationSet = avo.animationSets[animationTitle];\n        for (var animationName in animationSet.actions) {\n          var animationAction = animationSet.actions[animationName];\n          var newSteps = [];\n          var _iteratorNormalCompletion = true;\n          var _didIteratorError = false;\n          var _iteratorError = undefined;\n\n          try {\n            for (var _iterator = animationAction.steps[Symbol.iterator](), _step; !(_iteratorNormalCompletion = (_step = _iterator.next()).done); _iteratorNormalCompletion = true) {\n              var step = _step.value;\n\n              for (var i = 0; i < step.duration; i++) {\n                newSteps.push(step);\n              }\n            }\n          } catch (err) {\n            _didIteratorError = true;\n            _iteratorError = err;\n          } finally {\n            try {\n              if (!_iteratorNormalCompletion && _iterator.return) {\n                _iterator.return();\n              }\n            } finally {\n              if (_didIteratorError) {\n                throw _iteratorError;\n              }\n            }\n          }\n\n          animationAction.steps = newSteps;\n        }\n      }\n      //--------------------------------\n\n      //Rooms\n      //--------------------------------\n      this.rooms = {\n        first: new _rooms.FirstRoom(avo.assets.images.roomTiles)\n      };\n      //--------------------------------\n    }\n  }, {\n    key: \"run_start\",\n    value: function run_start() {\n      var avo = this.avo;\n\n      //DEBUG INSTANT START\n      if (avo.config.debugMode) this.avo.changeState(AVO.STATE_ACTION, this.enterFirstRoom);\n\n      if (avo.pointer.state === AVO.INPUT_ACTIVE || avo.keys[AVO.KEY_CODES.UP].state === AVO.INPUT_ACTIVE || avo.keys[AVO.KEY_CODES.DOWN].state === AVO.INPUT_ACTIVE || avo.keys[AVO.KEY_CODES.LEFT].state === AVO.INPUT_ACTIVE || avo.keys[AVO.KEY_CODES.RIGHT].state === AVO.INPUT_ACTIVE || avo.keys[AVO.KEY_CODES.SPACE].state === AVO.INPUT_ACTIVE || avo.keys[AVO.KEY_CODES.ENTER].state === AVO.INPUT_ACTIVE) {\n        avo.changeState(AVO.STATE_COMIC, this.playComic1);\n      }\n    }\n  }, {\n    key: \"playComic1\",\n    value: function playComic1() {\n      var avo = this.avo;\n      avo.comicStrip = new _comicStrip.ComicStrip(\"comic_1\", [avo.assets.images.comicPanel1A], this.finishComic1);\n    }\n  }, {\n    key: \"finishComic1\",\n    value: function finishComic1() {\n      this.avo.changeState(AVO.STATE_ACTION, this.enterFirstRoom);\n    }\n  }, {\n    key: \"prepareRoom\",\n    value: function prepareRoom() {\n      var avo = this.avo;\n\n      //Reset\n      var player = avo.playerActor;\n      avo.actors = [];\n      avo.zones = [];\n      avo.refs = {};\n\n      //Create the player character if she doesn't yet exist.\n      if (!player) {\n        avo.playerActor = new _entities.Actor(\"PLAYER\", 8 * 32, 8 * 32, 32, AVO.SHAPE_CIRCLE);\n        avo.playerActor.spritesheet = avo.assets.images.actor;\n        avo.playerActor.animationSet = avo.animationSets.actor;\n        avo.playerActor.attributes[AVO.ATTR.SPEED] = 4;\n        avo.playerActor.rotation = AVO.ROTATION_SOUTH;\n        avo.actors.push(avo.playerActor);\n      } else {\n        avo.playerActor = player;\n        avo.actors.push(avo.playerActor);\n      }\n\n      avo.camera.targetActor = avo.playerActor;\n    }\n  }, {\n    key: \"enterFirstRoom\",\n    value: function enterFirstRoom() {\n      var avo = this.avo;\n      this.prepareRoom();\n\n      avo.room = this.rooms.first;\n\n      var newActor = void 0,\n          newZone = void 0;\n\n      //Colour plates\n      //----------------------------------------------------------------\n      newZone = new _entities.Zone(\"red_plate\", 3 * 32, 8 * 32, 64, AVO.SHAPE_SQUARE, AVO.DURATION_INFINITE, []);\n      avo.zones.push(newZone);\n      avo.refs[newZone.name] = newZone;\n      newZone.spritesheet = avo.assets.images.plates;\n      newZone.animationSet = avo.animationSets.plate;\n      newZone.playAnimation(\"red\");\n\n      newZone = new _entities.Zone(\"yellow_plate\", 8 * 32, 5 * 32, 64, AVO.SHAPE_SQUARE, AVO.DURATION_INFINITE, []);\n      avo.zones.push(newZone);\n      avo.refs[newZone.name] = newZone;\n      newZone.spritesheet = avo.assets.images.plates;\n      newZone.animationSet = avo.animationSets.plate;\n      newZone.playAnimation(\"yellow\");\n\n      newZone = new _entities.Zone(\"blue_plate\", 13 * 32, 8 * 32, 64, AVO.SHAPE_SQUARE, AVO.DURATION_INFINITE, []);\n      avo.zones.push(newZone);\n      avo.refs[newZone.name] = newZone;\n      newZone.spritesheet = avo.assets.images.plates;\n      newZone.animationSet = avo.animationSets.plate;\n      newZone.playAnimation(\"blue\");\n      //----------------------------------------------------------------\n\n      //Colour boxes\n      //----------------------------------------------------------------\n      newActor = new _entities.Actor(\"red_box\", 8 * 32, 5 * 32, 32, AVO.SHAPE_SQUARE);\n      avo.actors.push(newActor);\n      avo.refs[newActor.name] = newActor;\n      newActor.spritesheet = avo.assets.images.boxes;\n      newActor.animationSet = avo.animationSets.box;\n      newActor.shadowSize = 1.2;\n      newActor.playAnimation(\"red\");\n\n      newActor = new _entities.Actor(\"yellow_box\", 13 * 32, 8 * 32 - 8, 32, AVO.SHAPE_SQUARE);\n      avo.actors.push(newActor);\n      avo.refs[newActor.name] = newActor;\n      newActor.spritesheet = avo.assets.images.boxes;\n      newActor.animationSet = avo.animationSets.box;\n      newActor.shadowSize = 1.2;\n      newActor.playAnimation(\"yellow\");\n\n      newActor = new _entities.Actor(\"blue_box\", 3 * 32, 8 * 32, 32, AVO.SHAPE_SQUARE);\n      avo.actors.push(newActor);\n      avo.refs[newActor.name] = newActor;\n      newActor.spritesheet = avo.assets.images.boxes;\n      newActor.animationSet = avo.animationSets.box;\n      newActor.shadowSize = 1.2;\n      newActor.playAnimation(\"blue\");\n      //----------------------------------------------------------------\n\n      /*\n      //Message (birthday wish) Wall\n      //----------------------------------------------------------------\n      newActor = new Actor(\"wish_wall\", 8 * 32, 0 * 32, 0, AVO.SHAPE_POLYGON);\n      avo.actors.push(newActor);\n      avo.refs[newActor.name] = newActor;\n      newActor.shapePolygonPath = [-256, -64, 256, -64, 256, 64, -256, 64];\n      newActor.movable = false;\n      newActor.spritesheet = avo.assets.images.walls;\n      newActor.animationSet = avo.animationSets.wall;\n      newActor.playAnimation(\"long_wall\");\n      \n      newActor = new Actor(\"wall_left\", 4 * 32, 0.5 * 32, 0, AVO.SHAPE_POLYGON);\n      avo.actors.push(newActor);\n      avo.refs[newActor.name] = newActor;\n      newActor.shapePolygonPath = [-128, -64, 128, -64, 128, 64, -128, 64];\n      newActor.movable = false;\n      newActor.spritesheet = avo.assets.images.walls;\n      newActor.animationSet = avo.animationSets.wall;\n      newActor.playAnimation(\"short_wall\");\n      \n      newActor = new Actor(\"wall_right\", 12 * 32, 0.5 * 32, 0, AVO.SHAPE_POLYGON);\n      avo.actors.push(newActor);\n      avo.refs[newActor.name] = newActor;\n      newActor.shapePolygonPath = [-128, -64, 128, -64, 128, 64, -128, 64];\n      newActor.movable = false;\n      newActor.spritesheet = avo.assets.images.walls;\n      newActor.animationSet = avo.animationSets.wall;\n      newActor.playAnimation(\"short_wall\");\n      //----------------------------------------------------------------\n      */\n    }\n  }, {\n    key: \"run_action\",\n    value: function run_action() {\n      var avo = this.avo;\n\n      var colours = [\"red\", \"blue\", \"yellow\"];\n      var matches = 0;\n\n      var _iteratorNormalCompletion2 = true;\n      var _didIteratorError2 = false;\n      var _iteratorError2 = undefined;\n\n      try {\n        for (var _iterator2 = colours[Symbol.iterator](), _step2; !(_iteratorNormalCompletion2 = (_step2 = _iterator2.next()).done); _iteratorNormalCompletion2 = true) {\n          var col = _step2.value;\n\n          if (_physics.Physics.checkCollision(avo.refs[col + \"_box\"], avo.refs[col + \"_plate\"])) {\n            avo.refs[col + \"_box\"].playAnimation(col + \"_glow\");\n            avo.refs[col + \"_plate\"].playAnimation(col + \"_glow\");\n            matches++;\n          } else {\n            avo.refs[col + \"_box\"].playAnimation(col);\n            avo.refs[col + \"_plate\"].playAnimation(col);\n          }\n        }\n\n        /*\n        const MOVE_DISTANCE = 96;\n        const BASELINE_Y = 0.5 * 32;\n        if (matches === colours.length) {\n          if (avo.refs[\"wall_right\"].x < 512 + MOVE_DISTANCE) {\n            avo.refs[\"wall_right\"].x += 1;\n            avo.refs[\"wall_right\"].y = BASELINE_Y + Utility.randomInt(0, 1);\n          }\n          \n          if (avo.refs[\"wall_left\"].x > -MOVE_DISTANCE) {\n            avo.refs[\"wall_left\"].x -= 1;\n            avo.refs[\"wall_left\"].y = BASELINE_Y + Utility.randomInt(0, 1);\n          }\n        }\n        */\n      } catch (err) {\n        _didIteratorError2 = true;\n        _iteratorError2 = err;\n      } finally {\n        try {\n          if (!_iteratorNormalCompletion2 && _iterator2.return) {\n            _iterator2.return();\n          }\n        } finally {\n          if (_didIteratorError2) {\n            throw _iteratorError2;\n          }\n        }\n      }\n    }\n  }]);\n\n  return ExampleAdventure;\n}(_story.Story);\n\n//# sourceURL=webpack:///./src/example-adventure/index.js?");

/***/ }),

/***/ "./src/example-adventure/rooms.js":
/*!****************************************!*\
  !*** ./src/example-adventure/rooms.js ***!
  \****************************************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.FirstRoom = undefined;\n\nvar _room = __webpack_require__(/*! ../avo/room.js */ \"./src/avo/room.js\");\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar FirstRoom = exports.FirstRoom = function (_Room) {\n  _inherits(FirstRoom, _Room);\n\n  function FirstRoom(spritesheet) {\n    _classCallCheck(this, FirstRoom);\n\n    var _this = _possibleConstructorReturn(this, (FirstRoom.__proto__ || Object.getPrototypeOf(FirstRoom)).call(this));\n\n    _this.width = 10;\n    _this.height = 8;\n    _this.tileWidth = 64;\n    _this.tileHeight = 64;\n\n    _this.spritesheet = spritesheet;\n    _this.floorTiles = [2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 1, 2, 1, 2, 2, 1, 1, 1, 1, 1, 2, 2, 1, 2, 2, 1, 1, 1, 1, 1, 1, 1, 1, 2, 2, 1, 2, 1, 1, 1, 1, 2, 2, 2, 2, 1, 2, 1, 1, 1, 1, 2, 1, 2, 2, 1, 2, 1, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2];\n    _this.ceilingTiles = [3, 0, 0, 0, 0, 0, 0, 3, 0, 3, 3, 0, 0, 0, 0, 0, 3, 3, 0, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 3, 3, 0, 3, 0, 0, 0, 0, 3, 3, 3, 3, 0, 3, 0, 0, 0, 0, 3, 0, 3, 3, 0, 3, 0, 0, 0, 0, 0, 0, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 3, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0];\n    _this.tileTypes = [new _room.RoomTile('NOTHING', 0, 0, false), new _room.RoomTile('PLAIN_FLOOR', 1, 0, false), new _room.RoomTile('WALL', 0, 1, true), new _room.RoomTile('CEILING', 1, 1, false)];\n    return _this;\n  }\n\n  return FirstRoom;\n}(_room.Room);\n\n//# sourceURL=webpack:///./src/example-adventure/rooms.js?");

/***/ }),

/***/ "./src/main.js":
/*!*********************!*\
  !*** ./src/main.js ***!
  \*********************/
/*! no static exports found */
/***/ (function(module, exports, __webpack_require__) {

"use strict";
eval("\n\nvar _index = __webpack_require__(/*! ./avo/index.js */ \"./src/avo/index.js\");\n\nvar _index2 = __webpack_require__(/*! ./example-adventure/index.js */ \"./src/example-adventure/index.js\");\n\n/*  Initialisations\n */\n//==============================================================================\n/*  \nAvO Adventure Game\n==================\n\n(Shaun A. Noordin || shaunanoordin.com || 20160517)\n********************************************************************************\n */\n\nvar app;\nwindow.onload = function () {\n  window.app = new _index.AvO(new _index2.ExampleAdventure());\n};\n//==============================================================================\n\n//# sourceURL=webpack:///./src/main.js?");

/***/ })

/******/ });